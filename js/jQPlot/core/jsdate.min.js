(function($){var jsDate=function(){this.syntax=jsDate.config.syntax;this._type="jsDate";
this.proxy=new Date();this.options={};this.locale=jsDate.regional.getLocale();this.formatString="";
this.defaultCentury=jsDate.config.defaultCentury;switch(arguments.length){case 0:break;
case 1:if(get_type(arguments[0])=="[object Object]"&&arguments[0]._type!="jsDate"){var opts=this.options=arguments[0];
this.syntax=opts.syntax||this.syntax;this.defaultCentury=opts.defaultCentury||this.defaultCentury;
this.proxy=jsDate.createDate(opts.date)}else{this.proxy=jsDate.createDate(arguments[0])
}break;default:var a=[];for(var i=0;i<arguments.length;i++){a.push(arguments[i])}this.proxy=new Date();
this.proxy.setFullYear.apply(this.proxy,a.slice(0,3));if(a.slice(3).length){this.proxy.setHours.apply(this.proxy,a.slice(3))
}break}};jsDate.config={defaultLocale:"en",syntax:"perl",defaultCentury:1900};jsDate.prototype.add=function(number,unit){var factor=multipliers[unit]||multipliers.day;
if(typeof factor=="number"){this.proxy.setTime(this.proxy.getTime()+(factor*number))
}else{factor.add(this,number)}return this};jsDate.prototype.clone=function(){return new jsDate(this.proxy.getTime())
};jsDate.prototype.getUtcOffset=function(){return this.proxy.getTimezoneOffset()*60000
};jsDate.prototype.diff=function(dateObj,unit,allowDecimal){dateObj=new jsDate(dateObj);
if(dateObj===null){return null}var factor=multipliers[unit]||multipliers.day;if(typeof factor=="number"){var unitDiff=(this.proxy.getTime()-dateObj.proxy.getTime())/factor
}else{var unitDiff=factor.diff(this.proxy,dateObj.proxy)}return(allowDecimal?unitDiff:Math[unitDiff>0?"floor":"ceil"](unitDiff))
};jsDate.prototype.getAbbrDayName=function(){return jsDate.regional[this.locale]["dayNamesShort"][this.proxy.getDay()]
};jsDate.prototype.getAbbrMonthName=function(){return jsDate.regional[this.locale]["monthNamesShort"][this.proxy.getMonth()]
};jsDate.prototype.getAMPM=function(){return this.proxy.getHours()>=12?"PM":"AM"};
jsDate.prototype.getAmPm=function(){return this.proxy.getHours()>=12?"pm":"am"};jsDate.prototype.getCentury=function(){return parseInt(this.proxy.getFullYear()/100,10)
};jsDate.prototype.getDate=function(){return this.proxy.getDate()};jsDate.prototype.getDay=function(){return this.proxy.getDay()
};jsDate.prototype.getDayOfWeek=function(){var dow=this.proxy.getDay();return dow===0?7:dow
};jsDate.prototype.getDayOfYear=function(){var d=this.proxy;var ms=d-new Date(""+d.getFullYear()+"/1/1 GMT");
ms+=d.getTimezoneOffset()*60000;d=null;return parseInt(ms/60000/60/24,10)+1};jsDate.prototype.getDayName=function(){return jsDate.regional[this.locale]["dayNames"][this.proxy.getDay()]
};jsDate.prototype.getFullWeekOfYear=function(){var d=this.proxy;var doy=this.getDayOfYear();
var rdow=6-d.getDay();var woy=parseInt((doy+rdow)/7,10);return woy};jsDate.prototype.getFullYear=function(){return this.proxy.getFullYear()
};jsDate.prototype.getGmtOffset=function(){var hours=this.proxy.getTimezoneOffset()/60;
var prefix=hours<0?"+":"-";hours=Math.abs(hours);return prefix+addZeros(Math.floor(hours),2)+":"+addZeros((hours%1)*60,2)
};jsDate.prototype.getHours=function(){return this.proxy.getHours()};jsDate.prototype.getHours12=function(){var hours=this.proxy.getHours();
return hours>12?hours-12:(hours==0?12:hours)};jsDate.prototype.getIsoWeek=function(){var d=this.proxy;
var woy=this.getWeekOfYear();var dow1_1=(new Date(""+d.getFullYear()+"/1/1")).getDay();
var idow=woy+(dow1_1>4||dow1_1<=1?0:1);if(idow==53&&(new Date(""+d.getFullYear()+"/12/31")).getDay()<4){idow=1
}else{if(idow===0){d=new jsDate(new Date(""+(d.getFullYear()-1)+"/12/31"));idow=d.getIsoWeek()
}}d=null;return idow};jsDate.prototype.getMilliseconds=function(){return this.proxy.getMilliseconds()
};jsDate.prototype.getMinutes=function(){return this.proxy.getMinutes()};jsDate.prototype.getMonth=function(){return this.proxy.getMonth()
};jsDate.prototype.getMonthName=function(){return jsDate.regional[this.locale]["monthNames"][this.proxy.getMonth()]
};jsDate.prototype.getMonthNumber=function(){return this.proxy.getMonth()+1};jsDate.prototype.getSeconds=function(){return this.proxy.getSeconds()
};jsDate.prototype.getShortYear=function(){return this.proxy.getYear()%100};jsDate.prototype.getTime=function(){return this.proxy.getTime()
};jsDate.prototype.getTimezoneAbbr=function(){return this.proxy.toString().replace(/^.*\(([^)]+)\)$/,"$1")
};jsDate.prototype.getTimezoneName=function(){var match=/(?:\((.+)\)$| ([A-Z]{3}) )/.exec(this.toString());
return match[1]||match[2]||"GMT"+this.getGmtOffset()};jsDate.prototype.getTimezoneOffset=function(){return this.proxy.getTimezoneOffset()
};jsDate.prototype.getWeekOfYear=function(){var doy=this.getDayOfYear();var rdow=7-this.getDayOfWeek();
var woy=parseInt((doy+rdow)/7,10);return woy};jsDate.prototype.getUnix=function(){return Math.round(this.proxy.getTime()/1000,0)
};jsDate.prototype.getYear=function(){return this.proxy.getYear()};jsDate.prototype.next=function(unit){unit=unit||"day";
return this.clone().add(1,unit)};jsDate.prototype.set=function(){switch(arguments.length){case 0:this.proxy=new Date();
break;case 1:if(get_type(arguments[0])=="[object Object]"&&arguments[0]._type!="jsDate"){var opts=this.options=arguments[0];
this.syntax=opts.syntax||this.syntax;this.defaultCentury=opts.defaultCentury||this.defaultCentury;
this.proxy=jsDate.createDate(opts.date)}else{this.proxy=jsDate.createDate(arguments[0])
}break;default:var a=[];for(var i=0;i<arguments.length;i++){a.push(arguments[i])}this.proxy=new Date();
this.proxy.setFullYear.apply(this.proxy,a.slice(0,3));if(a.slice(3).length){this.proxy.setHours.apply(this.proxy,a.slice(3))
}break}return this};jsDate.prototype.setDate=function(n){this.proxy.setDate(n);return this
};jsDate.prototype.setFullYear=function(){this.proxy.setFullYear.apply(this.proxy,arguments);
return this};jsDate.prototype.setHours=function(){this.proxy.setHours.apply(this.proxy,arguments);
return this};jsDate.prototype.setMilliseconds=function(n){this.proxy.setMilliseconds(n);
return this};jsDate.prototype.setMinutes=function(){this.proxy.setMinutes.apply(this.proxy,arguments);
return this};jsDate.prototype.setMonth=function(){this.proxy.setMonth.apply(this.proxy,arguments);
return this};jsDate.prototype.setSeconds=function(){this.proxy.setSeconds.apply(this.proxy,arguments);
return this};jsDate.prototype.setTime=function(n){this.proxy.setTime(n);return this
};jsDate.prototype.setYear=function(){this.proxy.setYear.apply(this.proxy,arguments);
return this};jsDate.prototype.strftime=function(formatString){formatString=formatString||this.formatString||jsDate.regional[this.locale]["formatString"];
return jsDate.strftime(this,formatString,this.syntax)};jsDate.prototype.toString=function(){return this.proxy.toString()
};jsDate.prototype.toYmdInt=function(){return(this.proxy.getFullYear()*10000)+(this.getMonthNumber()*100)+this.proxy.getDate()
};jsDate.regional={en:{monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],formatString:"%Y-%m-%d %H:%M:%S"},fr:{monthNames:["Janvier","Février","Mars","Avril","Mai","Juin","Juillet","Août","Septembre","Octobre","Novembre","Décembre"],monthNamesShort:["Jan","Fév","Mar","Avr","Mai","Jun","Jul","Aoû","Sep","Oct","Nov","Déc"],dayNames:["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],dayNamesShort:["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"],formatString:"%d-%m-%Y %H:%M:%S"},de:{monthNames:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],monthNamesShort:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],dayNames:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],dayNamesShort:["So","Mo","Di","Mi","Do","Fr","Sa"],formatString:"%Y-%m-%d %H:%M:%S"},es:{monthNames:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],monthNamesShort:["Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"],dayNames:["Domingo","Lunes","Martes","Mi&eacute;rcoles","Jueves","Viernes","S&aacute;bado"],dayNamesShort:["Dom","Lun","Mar","Mi&eacute;","Juv","Vie","S&aacute;b"],formatString:"%Y-%m-%d %H:%M:%S"},ru:{monthNames:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],monthNamesShort:["Янв","Фев","Мар","Апр","Май","Июн","Июл","Авг","Сен","Окт","Ноя","Дек"],dayNames:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],dayNamesShort:["вск","пнд","втр","срд","чтв","птн","сбт"],formatString:"%Y-%m-%d %H:%M:%S"},ar:{monthNames:["كانون الثاني","شباط","آذار","نيسان","آذار","حزيران","تموز","آب","أيلول","تشرين الأول","تشرين الثاني","كانون الأول"],monthNamesShort:["1","2","3","4","5","6","7","8","9","10","11","12"],dayNames:["السبت","الأحد","الاثنين","الثلاثاء","الأربعاء","الخميس","الجمعة"],dayNamesShort:["سبت","أحد","اثنين","ثلاثاء","أربعاء","خميس","جمعة"],formatString:"%Y-%m-%d %H:%M:%S"},pt:{monthNames:["Janeiro","Fevereiro","Mar&ccedil;o","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],monthNamesShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],dayNames:["Domingo","Segunda-feira","Ter&ccedil;a-feira","Quarta-feira","Quinta-feira","Sexta-feira","S&aacute;bado"],dayNamesShort:["Dom","Seg","Ter","Qua","Qui","Sex","S&aacute;b"],formatString:"%Y-%m-%d %H:%M:%S"},"pt-BR":{monthNames:["Janeiro","Fevereiro","Mar&ccedil;o","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],monthNamesShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],dayNames:["Domingo","Segunda-feira","Ter&ccedil;a-feira","Quarta-feira","Quinta-feira","Sexta-feira","S&aacute;bado"],dayNamesShort:["Dom","Seg","Ter","Qua","Qui","Sex","S&aacute;b"],formatString:"%Y-%m-%d %H:%M:%S"},pl:{monthNames:["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],monthNamesShort:["Sty","Lut","Mar","Kwi","Maj","Cze","Lip","Sie","Wrz","Paź","Lis","Gru"],dayNames:["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"],dayNamesShort:["Ni","Pn","Wt","Śr","Cz","Pt","Sb"],formatString:"%Y-%m-%d %H:%M:%S"},nl:{monthNames:["Januari","Februari","Maart","April","Mei","Juni","July","Augustus","September","Oktober","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","Mei","Jun","Jul","Aug","Sep","Okt","Nov","Dec"],dayNames:","["Zondag","Maandag","Dinsdag","Woensdag","Donderdag","Vrijdag","Zaterdag"],dayNamesShort:["Zo","Ma","Di","Wo","Do","Vr","Za"],formatString:"%Y-%m-%d %H:%M:%S"},sv:{monthNames:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"],monthNamesShort:["jan","feb","mar","apr","maj","jun","jul","aug","sep","okt","nov","dec"],dayNames:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"],dayNamesShort:["sön","mån","tis","ons","tor","fre","lör"],formatString:"%Y-%m-%d %H:%M:%S"},fi:{monthNames:["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesäkuu","heinäkuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],monthNamesShort:["tammi","helmi","maalis","huhti","touko","kesä","heinä","elo","syys","loka","marras","joulu"],dayNames:["sunnuntai","maanantai","tiistai","keskiviikko","torstai","perjantai","lauantai"],dayNamesShort:["su","ma","ti","ke","to","pe","la"],formatString:"%Y-%m-%d %H:%M:%S"}};
jsDate.regional["en-US"]=jsDate.regional["en-GB"]=jsDate.regional.en;jsDate.config.gwtintegration=true;
jsDate.regional.getLocale=function(){var l=jsDate.config.defaultLocale;if(jsDate.config.gwtintegration&&window.__gwt_Locale!==undefined){var tmpl=window.__gwt_Locale;
if(jsDate.regional.hasOwnProperty(tmpl.replace("_","-"))){l=tmpl.replace("_","-")
}else{if(jsDate.regional.hasOwnProperty(tmpl.split("_")[0])){l=tmpl.split("_")[0]
}}}else{if(document&&document.getElementsByTagName("html")&&document.getElementsByTagName("html")[0].lang){l=document.getElementsByTagName("html")[0].lang;
if(!jsDate.regional.hasOwnProperty(l)){l=jsDate.config.defaultLocale}}}return l};
var day=24*60*60*1000;var addZeros=function(num,digits){num=String(num);var i=digits-num.length;
var s=String(Math.pow(10,i)).slice(1);return s.concat(num)};var multipliers={millisecond:1,second:1000,minute:60*1000,hour:60*60*1000,day:day,week:7*day,month:{add:function(d,number){multipliers.year.add(d,Math[number>0?"floor":"ceil"](number/12));
var prevMonth=d.getMonth()+(number%12);if(prevMonth==12){prevMonth=0;d.setYear(d.getFullYear()+1)
}else{if(prevMonth==-1){prevMonth=11;d.setYear(d.getFullYear()-1)}}d.setMonth(prevMonth)
},diff:function(d1,d2){var diffYears=d1.getFullYear()-d2.getFullYear();var diffMonths=d1.getMonth()-d2.getMonth()+(diffYears*12);
var diffDays=d1.getDate()-d2.getDate();return diffMonths+(diffDays/30)}},year:{add:function(d,number){d.setYear(d.getFullYear()+Math[number>0?"floor":"ceil"](number))
},diff:function(d1,d2){return multipliers.month.diff(d1,d2)/12}}};for(var unit in multipliers){if(unit.substring(unit.length-1)!="s"){multipliers[unit+"s"]=multipliers[unit]
}}var format=function(d,code,syntax){if(jsDate.formats[syntax]["shortcuts"][code]){return jsDate.strftime(d,jsDate.formats[syntax]["shortcuts"][code],syntax)
}else{var getter=(jsDate.formats[syntax]["codes"][code]||"").split(".");var nbr=d["get"+getter[0]]?d["get"+getter[0]]():"";
if(getter[1]){nbr=addZeros(nbr,getter[1])}return nbr}};jsDate.strftime=function(d,formatString,syntax,locale){var syn="perl";
var loc=jsDate.regional.getLocale();if(syntax&&jsDate.formats.hasOwnProperty(syntax)){syn=syntax
}else{if(syntax&&jsDate.regional.hasOwnProperty(syntax)){loc=syntax}}if(locale&&jsDate.formats.hasOwnProperty(locale)){syn=locale
}else{if(locale&&jsDate.regional.hasOwnProperty(locale)){loc=locale}}if(get_type(d)!="[object Object]"||d._type!="jsDate"){d=new jsDate(d);
d.locale=loc}if(!formatString){formatString=d.formatString||jsDate.regional[loc]["formatString"]
}var source=formatString||"%Y-%m-%d",result="",match;while(source.length>0){if(match=source.match(jsDate.formats[syn].codes.matcher)){result+=source.slice(0,match.index);
result+=(match[1]||"")+format(d,match[2],syn);source=source.slice(match.index+match[0].length)
}else{result+=source;source=""}}return result};jsDate.formats={ISO:"%Y-%m-%dT%H:%M:%S.%N%G",SQL:"%Y-%m-%d %H:%M:%S"};
jsDate.formats.perl={codes:{matcher:/()%(#?(%|[a-z]))/i,Y:"FullYear",y:"ShortYear.2",m:"MonthNumber.2","#m":"MonthNumber",B:"MonthName",b:"AbbrMonthName",d:"Date.2","#d":"Date",e:"Date",A:"DayName",a:"AbbrDayName",w:"Day",H:"Hours.2","#H":"Hours",I:"Hours12.2","#I":"Hours12",p:"AMPM",M:"Minutes.2","#M":"Minutes",S:"Seconds.2","#S":"Seconds",s:"Unix",N:"Milliseconds.3","#N":"Milliseconds",O:"TimezoneOffset",Z:"TimezoneName",G:"GmtOffset"},shortcuts:{F:"%Y-%m-%d",T:"%H:%M:%S",X:"%H:%M:%S",x:"%m/%d/%y",D:"%m/%d/%y","#c":"%a %b %e %H:%M:%S %Y",v:"%e-%b-%Y",R:"%H:%M",r:"%I:%M:%S %p",t:"\t",n:"\n","%":"%"}};
jsDate.formats.php={codes:{matcher:/()%((%|[a-z]))/i,a:"AbbrDayName",A:"DayName",d:"Date.2",e:"Date",j:"DayOfYear.3",u:"DayOfWeek",w:"Day",U:"FullWeekOfYear.2",V:"IsoWeek.2",W:"WeekOfYear.2",b:"AbbrMonthName",B:"MonthName",m:"MonthNumber.2",h:"AbbrMonthName",C:"Century.2",y:"ShortYear.2",Y:"FullYear",H:"Hours.2",I:"Hours12.2",l:"Hours12",p:"AMPM",P:"AmPm",M:"Minutes.2",S:"Seconds.2",s:"Unix",O:"TimezoneOffset",z:"GmtOffset",Z:"TimezoneAbbr"},shortcuts:{D:"%m/%d/%y",F:"%Y-%m-%d",T:"%H:%M:%S",X:"%H:%M:%S",x:"%m/%d/%y",R:"%H:%M",r:"%I:%M:%S %p",t:"\t",n:"\n","%":"%"}};
jsDate.createDate=function(date){if(date==null){return new Date()}if(date instanceof Date){return date
}if(typeof date=="number"){return new Date(date)}var parsable=String(date).replace(/^\s*(.+)\s*$/g,"$1");
parsable=parsable.replace(/^([0-9]{1,4})-([0-9]{1,2})-([0-9]{1,4})/,"$1/$2/$3");parsable=parsable.replace(/^(3[01]|[0-2]?\d)[-\/]([a-z]{3,})[-\/](\d{4})/i,"$1 $2 $3");
var match=parsable.match(/^(3[01]|[0-2]?\d)[-\/]([a-z]{3,})[-\/](\d{2})\D*/i);if(match&&match.length>3){var m3=parseFloat(match[3]);
var ny=jsDate.config.defaultCentury+m3;ny=String(ny);parsable=parsable.replace(/^(3[01]|[0-2]?\d)[-\/]([a-z]{3,})[-\/](\d{2})\D*/i,match[1]+" "+match[2]+" "+ny)
}match=parsable.match(/^([0-9]{1,2})[-\/]([0-9]{1,2})[-\/]([0-9]{1,2})[^0-9]/);function h1(parsable,match){var m1=parseFloat(match[1]);
var m2=parseFloat(match[2]);var m3=parseFloat(match[3]);var cent=jsDate.config.defaultCentury;
var ny,nd,nm,str;if(m1>31){nd=m3;nm=m2;ny=cent+m1}else{nd=m2;nm=m1;ny=cent+m3}str=nm+"/"+nd+"/"+ny;
return parsable.replace(/^([0-9]{1,2})[-\/]([0-9]{1,2})[-\/]([0-9]{1,2})/,str)}if(match&&match.length>3){parsable=h1(parsable,match)
}var match=parsable.match(/^([0-9]{1,2})[-\/]([0-9]{1,2})[-\/]([0-9]{1,2})$/);if(match&&match.length>3){parsable=h1(parsable,match)
}var i=0;var length=jsDate.matchers.length;var pattern,ms,current=parsable,obj;while(i<length){ms=Date.parse(current);
if(!isNaN(ms)){return new Date(ms)}pattern=jsDate.matchers[i];if(typeof pattern=="function"){obj=pattern.call(jsDate,current);
if(obj instanceof Date){return obj}}else{current=parsable.replace(pattern[0],pattern[1])
}i++}return NaN};jsDate.daysInMonth=function(year,month){if(month==2){return new Date(year,1,29).getDate()==29?29:28
}return[undefined,31,undefined,31,30,31,30,31,31,30,31,30,31][month]};jsDate.matchers=[[/(3[01]|[0-2]\d)\s*\.\s*(1[0-2]|0\d)\s*\.\s*([1-9]\d{3})/,"$2/$1/$3"],[/([1-9]\d{3})\s*-\s*(1[0-2]|0\d)\s*-\s*(3[01]|[0-2]\d)/,"$2/$3/$1"],function(str){var match=str.match(/^(?:(.+)\s+)?([012]?\d)(?:\s*\:\s*(\d\d))?(?:\s*\:\s*(\d\d(\.\d*)?))?\s*(am|pm)?\s*$/i);
if(match){if(match[1]){var d=this.createDate(match[1]);if(isNaN(d)){return}}else{var d=new Date();
d.setMilliseconds(0)}var hour=parseFloat(match[2]);if(match[6]){hour=match[6].toLowerCase()=="am"?(hour==12?0:hour):(hour==12?12:hour+12)
}d.setHours(hour,parseInt(match[3]||0,10),parseInt(match[4]||0,10),((parseFloat(match[5]||0))||0)*1000);
return d}else{return str}},function(str){var match=str.match(/^(?:(.+))[T|\s+]([012]\d)(?:\:(\d\d))(?:\:(\d\d))(?:\.\d+)([\+\-]\d\d\:\d\d)$/i);
if(match){if(match[1]){var d=this.createDate(match[1]);if(isNaN(d)){return}}else{var d=new Date();
d.setMilliseconds(0)}var hour=parseFloat(match[2]);d.setHours(hour,parseInt(match[3],10),parseInt(match[4],10),parseFloat(match[5])*1000);
return d}else{return str}},function(str){var match=str.match(/^([0-3]?\d)\s*[-\/.\s]{1}\s*([a-zA-Z]{3,9})\s*[-\/.\s]{1}\s*([0-3]?\d)$/);
if(match){var d=new Date();var cent=jsDate.config.defaultCentury;var m1=parseFloat(match[1]);
var m3=parseFloat(match[3]);var ny,nd,nm;if(m1>31){nd=m3;ny=cent+m1}else{nd=m1;ny=cent+m3
}var nm=inArray(match[2],jsDate.regional[jsDate.regional.getLocale()]["monthNamesShort"]);
if(nm==-1){nm=inArray(match[2],jsDate.regional[jsDate.regional.getLocale()]["monthNames"])
}d.setFullYear(ny,nm,nd);d.setHours(0,0,0,0);return d}else{return str}}];function inArray(elem,array){if(array.indexOf){return array.indexOf(elem)
}for(var i=0,length=array.length;i<length;i++){if(array[i]===elem){return i}}return -1
}function get_type(thing){if(thing===null){return"[object Null]"}return Object.prototype.toString.call(thing)
}$.jsDate=jsDate})(jQuery);