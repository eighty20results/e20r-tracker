{
  "name" : "E20R Tracker",
  "slug" : "e20r-tracker",
  "download_url" : "https://eighty20results.com/protected-content/e20r-tracker/e20r-tracker-0.9.21.zip",
  "version" : "0.9.21",
  "tested": "4.2.4",
  "requires": "4.2.0",
  "author" : "Thomas Sjolshagen <thomas@eighty20results.com>",
  "author_homepage": "https://eighty20results.com/thomas-sjolshagen",
  "last_updated": "2015-08-06 18:12:00",
  "homepage": "https://eighty20results.com/e20r-tracker",
  "sections" : {
    "description" : "Plugin for managing fitness and nutrition coaching content.<br/><br/>We recommend using this plugin in conjunction with the <a href='http://paidmembershipspro.com' target='_blank'>Paid Memberships Pro</a> plugin, and the <a href='https://eighty20results.com/pmpro-sequence/' target='_blank'>PMPro Sequences</a> plugin.",
    "changelog": "<h3>0.9.21</h3><ol><li>Fix redirect loop in has_* shortcode checks.</li></ol><h3>0.9.20</h3><ol><li>Fix header formatting when creating readme_changelog.txt</li><li>Move runtime check to its own e20r_should_we_run() function since it's repeated for every update function.</li><li>Rename all of the update functions and exists checks to use e20r_ prefix.</li><li>Fix OB1 error when selecting upgrade scripts to run for DB</li><li>Rename upgrade scripts to include e20r prefi<h3>0.9.19</h3><ol><li>Support passing the $version variable to the update_db_to_*() function</li><li>Add support for version argument in when calling the update_db_to_$version() function.</li><li>Can't attempt to use result data as array entries when they're stdClass().</li><li>Split update_db_to for OB1 errors into 2 separate functions w/2 separate DB version numbers.</li><li>Update DB Version to upgrade OB1 errors in dates for check-ins & activities</li></ol><h3>0.9.18</h3><ol><li>Set new DB version</li><li>Transition to using findArticles() whenever searching for articles</li><li>findArticles() will always return an array of articles or FALSE.</li><li>Set the tempo type (string) for fetched activity groups in archives</li><li>Add ability to turn on/off tracking fields in e20r_activity shortcode.</li><li>Handle new allowedActivityAccess() return values.</li><li>Add filter to determine which CPTs to allow duplication of</li><li>Add 'Duplicate' option for specific CPT types</li><li>Duplicate a post (CPT) and all of its e20rTracker specific metadata, etc.</li><li>Avoid loading program ID for users that aren't logged in.</li><li>Transition to using findArticles() whenever looking up an article</li><li>Handle cases where the Workout speed (type) ID is null.</li><li>Set program ID whenever an AJAX call is triggered.</li><li>Transition to using findArticles() whenever looking up an article.</li><li>Only select articles that are in the correct program and has the correct delay (day of release since start)</li><li>Set default (empty) article & ID if no article is found.</li><li>Set program ID when processing AJAX calls</li><li>If no article is found, define a default (empty) one and set the id for it to CONST_NULL_ARTICLE</li><li>Make sure the activity is checked against the user ID (if the User ID is defined)</li><li>Include check & update of the e20r_checkin table as well</li><li>Add load_client_settings() function to only load client_information required to manage progress forms, etc.</li><li>Only load the required client_info data on init()</li><li>Force refresh of data in setClient() if new user gets loaded.</li><li>Use simplified $e20rArticle->findArticles() function to locate articles</li><li>Load default settings if user/admin/program specifies the CONST_DEFAULT_ARTICLE id (-9999)</li><li>Only ignore an article with a release date of -9999 if the user isn't adamant we don't.</li><li>Add parent::find() for e20rSettings class.</li><li>Load the $currentProgram configuration when e20rProgram::init() is called</li><li>Transition loadProgram() to use configure_startdate() function.</li><li>Create dedicated 'configure_startdate' function - it currently supports using the defined program startdate, or to use the membership start date for the user.</li><li>Modify program config in startdate() if a different programId from what we have in $currentProgram is specified in the function arguments.</li><li>Refactor e20rArticle class Use article ID when init()</li><li>Load $currentArticle in init()</li><li>emptyArticle() didn't return the default settings when called.</li><li>Reduce the number of article search & return functions available (only really need findArticles(), but may want findArticlesNear() later)</li><li>Clean up getActivity() function and return the activity ID when calling it. (or false if error)</li><li>getExcerpt() now handles multiple activities defined for an article (and returns the most likely candidate for the logged in user).</li><li>Do nothing in the has_*_shortcode() functions if the user isn't logged in.</li><li>Init $currentProgram global in has_*_shortcode() functions</li><li>Simplify the article search functions (use 'findArticles() consistently)</li><li>Use I18N compatible date function in getDateForPost()</li><li>Fix display function for Workout Archive didn't always run</li><li>Fix date for when the check-in was made (i.e. when it's scheduled to be done based on the delay value)</li><li>Add code to fix for_date field in e20r_workout table.</li><li>Only init the plugin if the user is already logged in</li><li>Make show/hide logic more obvious.</li><li>Remove unused if/then clauses for debug logging.</li><li>Add activity_id for the e20r_articles CPT to the list of variables to de-serialize.</li><li>Simplified the allowedActivityAccess function and have it return better granularity access information</li><li>Allow selection of multiple activities for an article definition</li><li>Remove unneeded code (Doesn't do anything useful) Add activity_id as a field to save/load as an array (from postmeta)</li><li>Builds the Change Log entries automatically</li><li>Don't create a new default assignment if one with the same title already exists</li><li>Fix paths & clean up temporary files</li><li>fonts/ is now included in the css/ directory so no need to specify it separately</li></ol><h3>0.9.16</h3><ol><li>Make sure we have a valid 'To' address in 'Client Contact' form for email messages.</li></ol><h3>0.9.15</h3><ol><li>Add e20r_coach role to system on load if needed.</li><li>Add actions for updating the user profile with the 'coach' role (if applicable)</li><li>Implemented is_a_coach() - returns true if the user has the e20r_coach capability.</li><li>Small typo in debug info from load_from_survey_table()</li><li>Add support for setting a user as a program coach in the user profile screen for the E20R-Tracker plugin</li><li>Add fonts directory to installation kit</li><li>Move ElegantIcons fonts to a sub-dir of css/</li><li>Add iThemes' ElegantIcons font files</li><li>Stop debug listing for activity datastructure.</li><li>Stop debug listing for achievement datastructure.</li><li>Stop output of arguments debug for query.</li><li>Check for empty() rather than false after $wpdb->get_results() call,</li><li>Avoid double-checking whether the article ID is present or not before adding it to the list of articles to return.</li><li>Remove echo of actual user key (used during debug of functionality).</li><li>Support using DB column value as indicator for type of decryption to do.</li><li>Remove superfluous check of encryption indicator.</li><li>Move un-implemented is_a_coach() function to e20rTracker class.</li><li>Don't display the encryption key for the user in the client information data.</li><li>Use I18N capable date function when calculating date/time for updates/edits.</li><li>Always use program Id & article when loading data.</li><li>Avoid superfluous config loads for programs and articles in load_from_survey_table()</li><li>Force the survey type if we're running from the back-end.</li><li>Select decryption type based on whether or not the DB records indicates its encryption status</li><li>Wouldn't always load the client data for the specified user/client ID</li><li>Only allow coaches to access a users data ( test whether is_a_coach() returns true/false )</li><li>Load program and article config when a coach is attempting to view the data for a user in the back-end.</li><li>Would occasionally return the incorrect date for a post/article.</li><li>Would occasionally load check-in data for the wrong user ID</li><li>Wouldn't always identify the correct article by ID on init.</li><li>Add survey check (returns true/false) based on article ID (isSurvey())</li><li>Only allow coaches to access a users data ( test whether is_a_coach() returns true/false )</li><li>Would occasionally return the incorrect date for a post/article.</li><li>Would occasionally load check-in data for the wrong user ID</li><li>Always set program ID & Article ID when a coach is attempting to view E20R-Tracker data in /wp-admin/</li><li>Would sometimes treat a regular user as a coach</li><li>Update DB version number</li></ol><h3>0.9.14</h3><ol><li>Load css for admin to render client information page(s) correctly sortByFields() needs to return the sorted data.</li><li>Get the correct startdate for the specified user id</li><li>Fix client message display and add alert if the client hasn't completed their interview.</li><li>Sort the assignment replies by delay (date) and order</li><li>Whitespace for readability</li><li>Return false if key is empty.</li><li>Use namespace for Crypto library and its exception handler</li><li>Handle cases where no UserId was supplied and the user is logged in.</li><li>Encode metadata when saving and loading the key.</li><li>Default to Base64 if we're having problems with the key</li><li>Upgraded Crypto library and renamed Crypto sources</li><li>Renamed Crypto library & its autoloader</li><li>Wouldn't handle all cases of a non-existing record.</li><li>Fix encryption (AES) and masking (base64).</li><li>Support any GravityForm based survey with the correct CSS class defined for processing.</li><li>Find the survey form we're processing and try to match it to an article that has a survey configured.</li><li>Ensure hover color of the text remains white.</li><li>Remove superflous loads of the survey & client_info data.</li><li>Typo in Encrypt Surveys option</li><li>Renamed getData() to get_data()</li><li>Added is_encrypted column to the e20r_surveys.</li><li>Add 'is_encrypted' field for a row in the surveys table.</li><li>Don't try to save dynamic client_info fields (incomplete_interview and loadedDefaults)</li><li>Check variables before using them.</li><li>Set survey type based on post ID</li><li>Correctly merge data from the e20r_surveys and e20r_client_info tables on load.</li><li>Handle multi-choice options when saving Gravity Form surveys.</li><li>Handle multi-choice fields when loading previously saved Gravity Form surveys</li><li>Disable encryption of individual DB fields.</li><li>Remove a survey entry after it's been encrypted and saved by the app.</li><li>Handle \n in text boxes.</li><li>Force color for buttons</li><li>Add definitions for a SURVEY_TYPE constant.</li><li>Didn't load the article settings for the specified articleId if it wasn't already loaded</li><li>Add e20r_surveys table definition</li><li>Add article_id field to e20r_client_info table</li><li>Rename getData() function to get_data() Return false in place of 0 for boolean flags</li><li>Remove wrong/weird set/group calculation</li><li>Superfluous warning thrown if article was empty.</li><li>Add support for survey_type field.</li><li>Remove wrong/weird set/group calculation</li><li>Typos and counter errors</li><li>Clean up group/set display for activity history.</li><li>Display multichoice arrays correctly in assignment view</li><li>Add support for e20r_surveys table</li><li>Don't show Measurements alert if measurements page isn't defined in the program</li><li>Make placeholder text translatable (and update to match button text)</li></ol><h3>0.9.13</h3><ol></ol><h3>0.9.12</h3><ol><li>Load select2 code for assignments in daily_progress shortcode.</li><li>Correctly identify the DB upgrade routine(s) to run.</li><li>Set DB version number</li><li>We haven't got handlers for a simple checkbox assignment yet, so remove it as an option Decode array of answers when field_type = multichoice.</li><li>Handle multichoice and hidden input field for the multichoice answer(s).</li><li>Include pre-existing answer in text input for assignment.</li><li>Add formatting for inputs in Yes/No fields.</li><li>Fix SQL for update function</li><li>Rename '*assignment-survey*' identifiers/classes to '*assignment-ranking*' Init select2 if multichoice field is present on page/in post.</li><li>Same formatting for multichoice and other inputs on assignments form</li><li>Add support for multichoice field(s) on the assignment form</li><li>Make 'save' button available if multichoice field is clicked (and save is hidden).</li><li>Convert multichoice answers to json and save in hidden assignment-answer input (to keep saving simple).</li><li>Handle survey configuration(s) in dailyProgress shortcode.</li><li>Add check-box for article that hosts/manages a survey</li><li>Set DB Version number</li><li>Fix CSS for new multichoice field option in Assignments</li><li>Add support for managing multi-option select fields for assignments</li><li>DB table upgrade script for DB v2.</li><li>Add support for upgrading DB based on external e20r_db_upgrade.php file & functions</li><li>Add manage_option_list callback for multichoice field support. (May not be needed)</li><li>Handle cases where there are select_options defined but the admin changed the field type.</li><li>Rename answer inputs (requires change to DB enum()) Rename survey rating to ranking</li><li>Rename sortAssignments() to sortByField().</li><li>Transition to sortByFields() in Assignments class.</li><li>Move sortByFields() to e20rTracker class</li><li>Make sortByFields() support user defined fields to sort by.</li><li>Add select_options setting/postmeta field.</li><li>Add support for multichoice field in assignment configuration.</li><li>Add support for displaying a multichoice field in an assignment.</li><li>Rename 'survey' fields to 'ranking' fields (the 1 - 10 ranking/likert fields)</li><li>Show an actual input field for text input fields.</li><li>Fix JS warnings</li><li>Enh: Add support for managing multi-option select fields for assignments</li><li>First update DB function created/loaded.</li><li>Reflect actual purpose of input: 'survey' versus 'ranking'</li><li>Use E20R_DB_VERSION constant to indicate change in DB version.</li><li>Use renamed activation/deactivation functions</li><li>Add e20r_db_version option</li><li>Create e20r_surveys table definition on plugin activation.</li><li>Transition from 'key' to 'index' for table indexes.</li><li>Move DB management to its own manage_tables() function</li><li>Rename plugin activiation and deactivation functions.</li><li>Handle situations where the user has assigned the same post/page to two different articles.</li><li>Test for access against a valid $article object.</li></ol><h3>0.9.11</h3><ol><li>Unnecessary version bump due to mistake during commit.</li></ol><h3>0.9.10</h3><ol><li>Add timeout error handling to jQuery.ajax() or .post() operations</li><li>Update shortcode section in Readme</li><li>Remove or comment out shortcode arguments that aren't used</li><li>Use $currentProgram global in getDelay.</li><li>Make sure startdate gets converted to a timestamp value before use.</li><li>We don't use 0 as the first day of the program, so correct the daysBetween() calculation.</li><li>Be consistent in loading settings for a program. Set program startdate for the current user based on their membership startdate.</li><li>Remove special handling for membership systems in $e20rProgram->startdate) (It's now in the loadProgram() code).</li><li>Remove obsolete code</li><li>Handle startdate correctly (it's set to monday)</li></ol><h3>0.9.9</h3><ol><li>Fix situations where the order number winds up getting 'wonky' (negative)</li><li>Handle situations where an unexpected variable type is attempted saved (should be array but isn't so we'll need to convert it).</li><li>Didn't clear the actual NULL (or 0) setting.</li><li>Didn't save assignment_ids for article when user clicked 'Save' in back-end</li><li>Add data filter for PMPro emails.</li><li>Include message to user (in confirmation email) about the status of their membership (depends on day of sign-up).</li><li>Removed unneeded level look-up.</li><li>When it's requested, make sure we actually load Achievements (not Assignments) data. (Only applied to the back-end client view)</li><li>Set timeout for AJAX operations to 10 seconds (10000)</li></ol><h3>0.9.8</h3><ol><li>Use the delay value for the article that is manages the postId to verify access. If the delay value is <= the the userIds current delay value, grant access.</li><li>Set the program start date to that of the user (i.e. force the startdate to be keyed off of the users membership start date).</li><li>Force use of the membership plugin's start date for the specified user.</li><li>Base access on the delay value for the specified user(s).</li><li>Handle the 'First day of the program, not allowed to proceed backwards' error message (ecode == 2)</li><li>On the first day of the program, it allowed you to attempt to navigate backwards without having any defined articles available. This caused error messages.</li><li>Return a specific error code to the AJAX caller if we're on the first day of the program for this user and they try to go backwards.</li></ol><h3>0.9.7</h3><ol><li>Add styles for legend/description on Achievements tab</li><li>Add legend/description for Achievements tab</li><li>Didn't load assignment & lesson/reminder for the 'to' day in the Dashboard day navigation.</li></ol><h3>0.9.6</h3><ol><li>Handle migration from  articles/assignments/checkins settings/postmeta to using article_ids/assignment_ids/checkin_ids</li><li>Set program id for measurement entry in progress overview 'measurement history' table</li><li>Reset postdata whenever using WP_Query(), get_posts() or get_pages()</li><li>Add private sort function (sortAssignments()): Will sort based on delay and order_num value ( delay, then order_num )</li><li>Nits for setting up arguments in loadAssignmentByMeta()</li><li>Skip entries with field_type = 0 ('Completed' button) unless searching based on field_type.</li><li>Also include article_id from database ({wp_prefix}_e20r_assignments table when loading user data for an assignment.</li><li>Fix issue where the system would always load default settings if an assignment question had been defined.</li><li>Move addPrograms() function to parent class.</li><li>Add addPrograms() function to allow adding of a single program_id to the existing settings->program_ids array.</li><li>Load from the correct select2 CDN (assume HTTPS) Reset postdata after using WP_Query() or get_posts()</li><li>Add URL to weekly_progress form to the javascript settings array.</li><li>Because we moved to using the parent::find() function we have to deal with testing whether the data returned is an array or an object before attempting to use it</li><li>Need a program id setting when configured when we list the assignments for the user</li><li>Use the e20r_progress.settings.weekly_progress constant to locate the URL for the measurement form</li><li>Fix layout/styles on measurement page(s)</li><li>Fix layout/style for photo upload buttons on measurement page.</li><li>Use page_id setting for generating link to the correct measurement form when listing the table of measurements.</li><li>Use correct URL to check-mark graphic for viewLessonComplete()</li><li>Use measurement_page_id setting for loading link to measurement form.</li><li>Use parent class find() function to load article data.</li><li>Add rudimentary client_info data listing</li><li>Load & view available client information in /wp-admin/ back end</li><li>Add support for handling redirection for logged in user when attempting to access multiple sales pages in contentFilter()</li><li>Add support for handling multiple sales pages in contentFilter()</li><li>Rename save button from 'Complete' to 'Save Answers'</li><li>Make sure the dashboard page ID has been defined.</li><li>Add redirect to dashboard if a logged in user (who's a member of the program) is attempting to access the sales page/post.</li><li>URL to client info page was incomplete</li></ol><h3>0.9.5</h3><ol><li>Handle situations where user has defined a workout with start/end day number or dates.</li><li>Include support for handling proper WP meta_query for program_id limited searches</li><li>Use $currentArticle rather than loading the same data again.</li><li>viewExerciseProgress() - Test activity list being received against empty() not is_null()</li><li>Fix issue when searching for article definitions belonging to a specific program.</li><li>Simplify findArticle() and leverage the find() function from the parent class while still ignoring 'always available' articles (Possibly not what we want!)</li><li>Simplify and use WP meta_query when searching for program specific check-in definitions</li><li>Remove debug output for loadOption() function - too noisy</li><li>Fix: Achievements statistics in progress overview.</li><li>Fix: Attempted to show excerpt when there was no action or activity defined.</li><li>For consistency use $currentArticle for accessing article settings</li><li>Fix: Achievements statistics in progress overview.</li><li>Automated metadata conversion (from serialized array to independent meta_key values) on plugin activation.</li><li>Added constant to determine whether to convert/unserialize the metadata.</li><li>Converted from serialized program id & article id metadata (programs|program_ids|article_id|other keys) to proper meta data (for those settings) that is WP query searchable.</li><li>Indicate link to assignment page when listing assignments in the progress_overview short code.</li></ol><h3>0.9.4</h3><ol><li>Use the article summary - if it exists - for the action excerpt.</li><li>Set background color to white for activity history list</li></ol><h3>0.9.3</h3><ol><li>Simplify processing of workout history for user's progress overview.</li><li>Allow metadata upgrade to proceed</li><li>White-screen of death issue (undeclared variable)</li></ol><h3>0.9.2</h3><ol><li>Fix static/non-static call warnings in e20rTracker</li><li>Removed unused global declaration</li><li>Add support for showing Activity history (i.e. the exercise rep statistics)</li><li>Ensure all assignment data gets loaded when requested.</li><li>Hide annoying alert dialog when there are no measurements to be found for the user.</li><li>Fix text for default setting (no page) in Program definition meta</li><li>Add program list to assignment definition (may hide at some point in future)</li><li>Don't limit number of records returned in loadAllSettings()</li><li>Refactor parameters</li><li>Transition to using currentClient global variable.</li><li>Save program ID(s) for each assignment used by the article.</li><li>Add update_metadata() at init for Assignments</li><li>Load all required scripts and styles to front-end.</li><li>Transition isEmpty() to the global e20rTracker class.</li><li>Use the isEmpty() function to check whether objects/arrays contain data</li><li>Only load assignment if it's defined as belonging to the program(s) (Or there are not programs defined for this assignment)</li><li>Force program_ids settings to be an array (if it's not when loaded).</li><li>Support updating assignment options (name and values) on init.</li><li>Add program list to assignment definition</li><li>Correctly process assignments array during save</li><li>Didn't always recognize if the e20rMeasurements object was empty or not.</li><li>Load Activities tab for progress_overview short code</li><li>Set user id & program info for weekly_progress short code</li><li>Fix formatting for progress_overview short code</li><li>Program-specific setting for weekly_progress page</li><li>Fix typos in changelog</li></ol><h3>0.9.1</h3><ol><li>Removed console logging of various objects</li><li>Add 'working' graphic when saving notes.</li><li>Set default measurement day to be Saturday (day #6)</li><li>Didn't attempt to list all defined mebership levels for Paid Memberships Pro</li><li>Make measurement day setting a program specific setting.</li></ol><h3>0.9</h3><ol><li>Display daily progress notes (decoupled from action check-in data)</li></ol><h3>0.8.19</h3><ol><li>Check-in action would sometimes overwrite check-in data for other days.</li><li>Set activity override if user navigates to next/previous day.</li><li>Bind to the 'Read more' activity link</li><li>Removed dummy class function</li><li>Add redirect with POST when user clicks teh 'Read more' link for a future/past activity.</li><li>Load new settings for the correct article when the user is navigating through daily_progress days</li><li>Remove commented out callback handler(s)</li><li>Remove debug for arguments in find() (log file hog!)</li><li>Handle cases where the activity short code is loaded as part of a redirect with specific activity ID & article information present. Note: Short code attributes take precedence over $_POST entries.</li><li>Only load data for specific activities if authorized to do so</li><li>Load jquery.redirect.js for daily_progress short code</li><li>Add ID to Read more link for activity & action excerpts</li><li>Add event handler for the Activity excerpt 'Read more' link</li><li>Add function to execute on click event for 'Read more' link</li><li>Add support for specifying activity to display when 'Read more' link is selected/clicked.</li></ol><h3>0.8.18</h3><ol><li>Handle situations where the delay value is 0 (i.e. the beginning of the program)</li><li>Handle (first day of program - 1 day) correctly: Nothing will be scheduled</li><li>Never prevent users from scrolling back, all the way to the beginning of the program</li></ol><h3>0.8.17</h3><ol><li>Cleaned up hasAccess() function</li><li>Admin access filter was a bit too 'aggressive' in granting access.</li><li>Handle success/failure during processing of next/previous navigation operations</li><li>Handle navigation to a different day than the current one.</li><li>Didn't consistently return an object from findArticleByDelay()</li></ol><h3>0.8.16</h3><ol><li>Updated e20r_assignments table definition</li></ol><h3>0.8.15</h3><ol><li>Lets the admin specify a '# of days since start of membership' for when the activity/workout is scheduled to become available/unavailable for the client.</li><li>Correctly return the found article ID if a single article was located.</li><li>Reformat layout of activity/workout settings in backend.</li><li>Format exercise settings window in backend</li></ol><h3>0.8.14</h3><ol><li>Handle previously given answers for a daily assignment.</li><li>Support updates to survey and yes/no fields</li><li>Didn't always reflect prior answers given. Fix: Didn't handle Yes/No answers correctly</li><li>Allow user to save whenever they update a response/answer.</li></ol><h3>0.8.12</h3><ol><li>Configure the dashboard page and progress page as part of the program definition</li><li>Set background color for the heading settings</li><li>Use $currentProgram global to set the start timestamp and page URL for the dashboard.</li><li>Load style for wp-admin when defining programs</li></ol><h3>0.8.11</h3><ol><li>Buffer output in showYesNoQuestion()</li><li>Clean up CSS for lesson button</li></ol><h3>0.8.10</h3><ol><li>Add support for Yes/No check box responses to assignments</li><li>Add support for survey ranking field responses to assignments</li><li>Use E20R_VERSION constant to version JavaScript and CSS files</li><li>Didn't add new assignments in the correct order in all situations</li><li>Didn't always save article settings</li><li>Didn't always save assignment settings</li><li>Force page reload if the article is newly created and an assignment is being added</li></ol><h3>0.8.8</h3><ol><li>Prevent the daily assignment short code from bleeding into the actual post/page.</li><li>Only list assignments with a delay value == release_day for the article.</li></ol><h3>0.8.7</h3><ol><li>Wouldn't save assignment settings.</li><li>Didn't always set the correct assignment ID</li></ol><h3>0.8.6</h3><ol><li>Set correct timestamp value in short code</li><li>Didn't always load the user's previously saved data when loading workout definition.</li><li>Make sure user is logged in before accepting AJAX save of workout data.</li><li>Simplified userCanEdit()</li></ol><h3>0.8.5</h3><ol><li>Height of the date navigator in the &#91;daily_progress shortcode&#93; output</li><li>Layout of program definition settings in wp-admin</li><li>Set default $users setting for program on load</li><li>Fix: Make definition of page containing &#91;e20r_activity&#93; short code more robust for a program</li><li>Didn't always load an appropriate length excerpt</li><li>Didn't always select the url to the page containing the defined activity</li><li>Didn't always add a 'Click to read' link</li><li>Fix: Didn't load check-ins from article definition in getCheckins()</li><li>Add debug for getActions()</li><li>Fix: Loading of check-ins, actions &amp; activity display.</li><li>Add config setting for a program activity_page_id<li></ol><h3>0.8.4</h3><ol><li>Didn't always add a new default assignment for the article.</li><li>Didn't always load the correct status for the assignment.</li></ol><h3>0.8.3</h3><ol><li>Fix numerous issues when listing &#93;daily_progress type='assignment'&#91; output</li><li>0.8.2 - Fix program data load and add highlight around lesson complete button in daily assignment.</li><li>0.8.1 - Correctly handle next weeks activity archive.</li></ol><h3>0.8.0</h3><ol><li>Add &#91;20r_activity_archive&#93; short code support</li></ol><h3>0.7.1</h3><ol><li>Bumped to test auto-update</li></ol><h3>0.7.0</h3><ol><li>Added automatic update functionality</li></ol>"
  }
}

