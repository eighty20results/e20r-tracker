{
  "name" : "E20R Tracker",
  "slug" : "e20r-tracker",
  "download_url" : "https://eighty20results.com/protected-content/e20r-tracker/e20r-tracker-1.5.17.zip",
  "version" : "1.5.17",
  "tested": "4.3.1",
  "requires": "3.7",
  "author" : "Wicked Strong Chicks, LLC <info@eighty20results.com>",
  "author_homepage": "https://eighty20results.com/thomas-sjolshagen",
  "last_updated": "2015-11-14 17:30:00",
  "homepage": "https://eighty20results.com/plugins/e20r-tracker",
  "sections" : {
    "description" : "Plugin for managing fitness and nutrition coaching content.<br/><br/>We recommend using this plugin in conjunction with the <a href='http://paidmembershipspro.com' target='_blank'>Paid Memberships Pro</a> plugin, and the <a href='https://eighty20results.com/pmpro-sequence/' target='_blank'>PMPro Sequences</a> plugin.",
    "changelog": "<p>This plug-in is <em>at best</em> BETA quality software! Use at your own risk!</p><h3>1.5.17</h3><ol><li>Rename e20rActionModel::loadUserCheckin() to e20rActionModel::get_user_checkin()</li><li>Couldn't handle situations where the card setting was empty (i.e. default value)</li><li>Add preventDefault() for day/date navigation in dashboard (ensure the browser doesn't actually follow the link back to the dashboard)</li></ol><h3>1.5.16</h3><ol><li>Wouldn't send e-mail alerts when client responded to coach.</li><li>Would inadvertently return the first message as the last</li></ol><h3>1.5.15</h3><ol><li>Send e-mail notice if user sends a message to their coach.</li><li>Remove inactive (no longer member) clients from list of clients to display in drop-down</li><li>Used wrong identifier in get_user_by()</li><li>Only attempt to update the login timestamp if the User ID is something other than 0</li><li>Didn't properly account for cases where the user's login timestamp wasn't correctly recorded.</li><li>Didn't include the date when displaying message summary in thickbox</li><li>Don't include timestamp (avoid UTC/TZ issues)</li><li>Include instant(ish) messaing history in back-end sorted message-history page/tab</li><li>Add method for extracting the Assignment question based on assignment_id value</li><li>Sort based on 'sent' attribute in array(s)</li></ol><h3>1.5.14</h3><ol><li>Update version number (1.5.14)</li><li>Add update functionality for v11 of the DB tables</li><li>Would sometimes fail to display the profile/daily progress check-in content.</li><li>Not displaying e20r_profile when some of the expected check-in definitions for the article are missing</li><li>Showing 'day in the past' warning when some of the expected check-in definitions for the article are missing</li><li>Tweak border & font weight for inner tabs when displaying measurements, etc.</li><li>Add debug for unread message count Correctly handle show/hide of new message alert on page load.</li><li>Load new message alert to post if daily_progress shortcode is present in content</li><li>Incorrect use of currentArticle->id before the article had been initialized/loaded</li><li>Use new load_user_assignment_info() so we include message history as well</li><li>Add AJAX handler for message status updates</li><li>Add AJAX handler to save message replies from front/back-end</li><li>Add AJAX handler to return assignment list (HTML, including messages & history) for a specific client ID</li><li>Include controller functions for heartbeat handling and identifying how many new messages a client has</li><li>Would return a positive message count for user, even when all messages were either read or archived has_unread_messages() included messages sent from the current user when looking for new messages</li><li>thread_is_archvied() would include messages sent from the current user when reporting that a message wasn't archived</li><li>Include recipient_id when looking up message history</li><li>Include the new_message_warning() HTML in the content whenever we're looking at a page/post with a e20r_profile, e20_progress_overview or e20r_activity_archive shortcode.</li><li>Working to isolate issue where profile isn't displaying if there isn't at least one action, activity and check-in included for dailyProgress in the article definition</li><li>Process message history and insert in the Assignments list (feedback goes with assignments, for now(?))</li><li>Refactor and move to e20r-assignments CSS file</li><li>Refactor and handle message transmission/reception better</li><li>Force initial heartbeat within 2 seconds of page loading.</li><li>Add e20r_response fields to better manage to/from of messages</li><li>Add support for archiving a message (by the recipient)</li><li>Remove invalid null entries for settings that are arrays.</li><li>Add handling for e20r_response table (messages between clients & coaches)</li><li>Simplify loading of user assignment data & have it include any messages.</li><li>Add formatting for message alert, history & transmission</li><li>Add heartbeat handling so we can use the heartbeat to update new message status on front</li><li>Add AJAX handler to reload assignment list on progress page/tabs</li><li>Load e20r-assignments.js for back-end (handle messages)</li><li>Add autoGrown for message input</li><li>Include assignments scripts (message handling) to list of scripts to load for e20r_profile and progress_overview shortcodes</li><li>Clean up unused code from load_frontend_scripts()</li><li>Add handler for assignments to load_frontend_scripts()</li><li>Add thickbox support to progress overview in load_frontend_scripts()</li><li>Add e20r_response table to database & ensure client ID and recipient ID are indexed</li><li>Add alert for new coach messages to pages with progress overview and profile view</li><li>Refactored is_user_logged_in() for daily_progress shortcode</li><li>Add basic handler for coach/client messaging AJAX</li><li>Commented out the saveAssignment_callback() (apparantly unused?) function.</li><li>Add handler for client/coach messaging system</li><li>Init the e20rClientAssignment class when the AJAX load of the assignments table has been completed (if applicable)</li><li>Fix color management for back-end buttons</li><li>Format size of feedback textarea</li><li>Add feedback messages/buttons for assignments</li><li>Add AJAX handler for assignment replies/feedback</li><li>Load assignments JavaScript in back-end to handle submitting/reading new assinment feedback</li><li>Add 'read' flag in e20r_response table</li><li>Return result of dbDelta() for the e20r_response table</li><li>Add coach specific feedback buttons for assignments table.</li><li>Update response table definition</li><li>Move response fields out of assignments table, use response_id for the assignment and save response data in its own table (e20r_responses).</li><li>Add response table definition</li><li>Add response fields to e20r_assignments table</li></ol><h3>1.5.13</h3><ol><li>Didn't use specified post_id when looking up a post for the card configuration</li><li>Rename loadWorkoutData() to load_activity();</li><li>Didn't always include the exercise ID when saving workout record.</li><li>Rename loadWorkoutData() to load_activity();</li></ol><h3>1.5.12</h3><ol><li>Properly align text in email display when showing the sent email message</li><li>Remove old HTML Escape content in emails being sent to clients</li><li>Escape subject line (strip slashes, etc)</li></ol><h3>1.5.11</h3><ol><li>Fix JavaScript error in e20r_profile and daily_progress shortcodes</li><li>Transition to new class name for check-in actions</li><li>If we have nothing to convert, exit from the conversion function early.</li><li>Rename e20rCheckin* classes to e20rAction*</li><li>Rename e20rCheckin variable to e20rAction (and currentCheckin to currentAction)</li><li>From Custom Post Type e20r_checkins to e20r_actions</li><li>Transition from *-checkin_ids to *-action_ids as meta data tag for articles</li><li>Only change the startdate to that of the user's program start if we're not in the back-end and we're not processing for another user (i.e. a coach looking up data for a user)</li><li>Correctly format the start/end date for a program if the startdate/enddate variables are configured</li><li>Add constants for feedback types on cards</li><li>Add hook for e20r_article_archive shortcode</li><li>Whitespace clean-up Remove unneeded loop in load_for_archive()</li><li>Remove unused variable ($gv)</li><li>Use autoloader for classes</li></ol><h3>1.5.10</h3><ol><li>Not all instances of the getArticles() arguments were correct after the refactoring in v1.5.9</li><li>Change when we load the font awesome library in wp-admin/</li></ol><h3>1.5.9</h3><ol><li>Need to account for new find() argument order Removed unused variables from scope</li><li>More precise debug info to help locate problems</li><li>Would sometimes add the program ID to the search when searching for explicit post IDs</li><li>Let filter override class name for dialog class</li></ol><h3>1.5.8</h3><ol><li>Remove old add_popup_overlay from e20rArticleView class</li><li>Add formatting for pop-up dialog for incomplete interviews</li><li>Fix formatting on small screens when using default (old) daily checking page.</li><li>Add debug for record_login function</li><li>Fix uninitialized variable warning</li><li>Add load_for_archive() which returns an array of all articles w/post_id & release_day values available to the user at this time</li><li>Add more infrastructure for generating archive of articles (not yet implemented)</li><li>Removed old pop-up warning from contentFilter() and moved it to the ClientView class.</li><li>Don't attempt to add date variable to permalink if user isn't logged in</li><li>Add pop-up warning to profiles where the user hasn't completed the Client Interview within two weeks of starting the program</li><li>Add a functional 'incomplete interview' pop-over warning for end-users when accessing their profile page</li><li>Reordered arguments for find*() functions</li><li>Removed unused variable</li><li>Reorder hooks & load only what's needed based on users login status.</li><li>Simplify nopriv AJAX response (always an error if the action is one of ours)</li><li>Update all AJAX action names to add the e20r_ prefix</li><li>Update URL for fontawesome </li><li>Redirect to login page if user isn't logged in & is attempting to access one of our shortcodes</li><li>Would sometimes attempt to display dependency warning to users while they weren't on the dashboard page</li><li>Changed order for find() functions</li><li>Didn't redirect to login page if user who isn't logged in attempted to view the profile page.</li><li>Add e20r prefix to all AJAX calls</li><li>Add getters and setters for active_delay and previous_delay settings. Remove unused code</li><li>Don't save active_delay and previous_delay settings values</li><li>Remove inactive code from saveSettings();</li><li>Set active_delay and previous_delay to settings.</li><li>$active_delay is always the current delay value for the current active user.</li><li>Prevent XSS vector when manipulating permalinks</li></ol><h3>1.5.7</h3><ol><li>Update change logs & version number (1.5.7)</li><li>Rudimentary framework for generating an article/post archive for users.</li><li>Attempt to shorten the amount of time spent loading data and leverage cached data instead</li><li>Added the date of the post/article as part of the URL, using it in article_summary shortcode</li><li>Skip loading of scripts & styles when doing AJAX calls</li><li>Fix debug output in hasAccess()</li><li>Remove clearfix class for day navigation bar</li><li>Add day value as hidden input field for card based dashboard</li><li>Always include today's 'release_day' for the user in the action and activity check-in dashboard</li><li>Add filters that allow us to add date(s) to posts that have articles defined for them (used to help process shortcodes, etc)</li><li>Added article_date query variable</li><li>Added rewrite tag for article_date variable</li><li>Adding rewrite rule to process date values when available</li></ol><h3>1.5.6</h3><ol><li>Didn't include the shortcode attribute (days) override in e20r_article_summary shortcode</li><li>Didn't always load post summaries when using the e20r_article_summary shortcode</li><li>Remove inner border for activity archive</li><li>Remove the clearfix class from the day navigation bar in the traditional dashboard view</li></ol><h3>1.5.5</h3><ol><li>Respect dont_drop setting in e20rArticleModel::find()</li><li>Don't drop future articles if we're processing the activity archives</li><li>Archive page should not include tracking fields in display</li><li>Hide buttons and tracking fields in activity definition on request (set $hide_print to true)</li><li>Archive page didn't correctly format all of the layout on display</li></ol><h3>1.5.4</h3><ol><li>Fix warning during debug output</li><li>Would sometimes generate warning while loading daily_progress shortcode</li><li>Refactor for formatting purposes</li><li>Removed clearfix from date navigation bar</li></ol><h3>1.5.3</h3><ol><li>Didn't always respect the article Id passed to the releaseDate function.</li><li>Fix whitescreen of death (undefined method)</li></ol><h3>1.5.2</h3><ol><li>Would sometimes allow access to articles that were scheduled for a future date because the post in the article is a repeating posts that the user currently _does_ have access to (with a different Article ID)</li><li>Add pmpro_has_membership_access_filter processing back to has_access() function</li><li>Don't ignore current user 'days since start' (delay) value vs article release_date when checking for access and PMPro is installed</li><li>Find the closest release day to a specified key (delay) value for articles.</li><li>Add current day's delay value to the navigation $_REQUEST[]</li><li>Clarify debug info</li></ol><h3>1.5.1</h3><ol><li>Add clearfix so layout of page is correct.</li><li>Don't throw warning when user isn't logged in and we're sending email messages.</li></ol><h3>1.5.0</h3><ol><li>Limit size of the traditional daily check-in dashboard to 720px max width</li><li>Lesson and activity summary boxes weren't formatted correctly</li><li>Increase size of font for check-in text</li><li>Double size of empty note textarea</li><li>Use class names for activity & lesson cards</li><li>Fix how shortcode_dailyProgress() handles arguments/attributes</li><li>Set use_cards in config variable while preserving any passed values</li><li>Fix shortcode attribute handling for the e20r_profile shortcode</li><li>Update function name in debug output for shortcode_clientProfile() function</li><li>Make sure the correct style is applied to the specified layout for the action & activity lesson/summary cards/dashboard entries</li><li>Include hidden variable for layout style in both layout options</li><li>For card based layout, move the notes section to the bottom of the list for the day.</li><li>Fix line-width for activity check-in</li><li>Whitespace removal</li><li>Add update_period setting for config (to be used by the card display)</li><li>Add support for capturing status of card based dashboard (yes or no) from $_POST</li><li>Select the type of display for the dashboard ('cards' or 'old-style' dashboards)</li><li>Use cards setting for 'getExcerpt()' function</li><li>Initial commit the minimized article-summary css file</li><li>Add formatting for navigation to next trackable exercise/activity</li><li>Display navigation link as a button Set location for navigation link/button</li><li>Transition fully to a print friendly activity page.</li><li>Adding support for configuring data to be used by the card-based dashboard display</li><li>Handle card based display(s) in excerpts</li><li>Add formatting to the link for the excerpt (allow displaying links as buttons, for instance)</li><li>Fix warning when displaying user information.</li><li>Add update_period setting for config (to be used by the card display)</li><li>Add support for capturing status of card based dashboard (yes or no) from $_POST</li><li>Select the type of display for the dashboard ('cards' or 'old-style' dashboards)</li><li>Use cards setting for 'getExcerpt()' function</li><li>Add support for use_cards attribute in e20r_profile shortcode.</li><li>Always use card layout for action & activity display (text lesson info)</li><li>Initial commit of new autogrowtextarea.js plugin for jQuery (used for Notes field on daily update page)</li><li>Initial commit to support future 'card based' dashboard layouts</li><li>Add support for passing whether to use action/activity cards vs the current dashboard layout</li><li>Didn't always save the note entered (in spite of what the feedback to the user was - yes, we lied!)</li><li>Fix size calculations for note overlay</li><li>Refactor the Notes class (make it more of a class!)</li><li>Add clearfix class</li><li>Fix margin for check-in fieldsets (daily activity)</li><li>Fix issue(s) with notes area on daily check-in page</li><li>Allow using a 'card' view for actions/activities (load CSS file for cards)</li><li>Upgrade to autoResize by @jevin on https://github.com/jevin/Autogrow-Textarea for notes area on dashboard page.</li><li>Notes section would indicate 'saved' even when the save failed.</li><li>Fix typo for jQuery()</li><li>Hide navigation buttons Force hide elements while printing</li><li>Simplify navigation between input fields for activity overview (daily activity view).</li><li>Fix for handling for edit button during activity & action check-in pane in dashboard</li><li>Avoid double events on click in dashboard</li><li>Remove unneeded debug logging to console</li><li>Refactor for style compliance</li><li>Adding infrastructure for displaying dashboard as cards of 'stuff' rather than a check-in/lesson configuration (old-style) triggered by 'use_cards' attribute in shortcode</li><li>Refactor how the dashboard is created/generated</li><li>Fixed issue where activity check-ins didn't quite work (highlight of completed activity check-in)</li><li>Remove link symbol (too broadly applied)</li></ol><h3>1.4.8</h3><ol><li>Limit link character to the pages where the link symbol should exist (i.e. not menus, back-end, etc)</li></ol><h3>1.4.7</h3><ol><li>Fix Phase description</li><li>Refactor formatting for printable activity/activity summary pages.</li></ol><h3>1.4.6</h3><ol><li>Add print icon to daily activity page</li><li>Hide title on print page(s) for activities on load</li><li>Add support for clicking print icon to print daily activity page.</li><li>Hide printer icon when page is too small (i.e. on phone)</li><li>Tentative CSS support for down arrow (to indicate scroll direction for additional content)</li><li>Hide printer icon on page being printed</li><li>Remove all navigation and header elements when printing the page</li></ol><h3>1.4.5</h3><ol><li>Transition to .clear-after class (from .clearfix)</li><li>Refactor @media screen formatting Add new group handling/formatting</li><li>Make the new-group print independent</li><li>Make new exercise header bar visible on screen & print</li><li>Add link symbol for <a href></li><li>Make weight/rep updates work in printable view.</li><li>Refactor CSS for print formatting</li><li>Refactor for Wordpress formatted file(s)</li><li>Fix formatting for saved data in weight/rep table inputs</li><li>Fix small-screen video size (Phone in Portrait mode)</li><li>Set font/display for 'print_only' attribute based displays while @media == screen</li></ol><h3>1.4.4</h3><ol><li>Handle multiple variable values for shortcode attributes in the affirmative (and return error message(s) if input isn't supported/understood)</li><li>Support print mode for [e20r_activity] Start escaping variables in HTML form(s)</li><li>Remove @media print formatting from the activities.css file and place it in print.css instead</li><li>Partially duplicate e20r_activity HTML in support of the display_printable_activity() view</li><li>Escape most attributes in web form(s) for activity.</li><li>Support display_type='print' for the [e20r_activity] shortcode</li><li>Add @media print formatting for individual activity listing (i.e. when e20r_activity shortcode has display_type='print')</li><li>Update background picture for the gender selector page CSS.</li><li>Updated dimensions of alert.png image</li><li>Refactor @media screen entries</li><li>Remove HTML element styling & place in .css file.</li></ol><h3>1.4.3</h3><ol><li>Fix formatting for weekly progress reminder</li></ol><h3>1.4.2</h3><ol><li>Move styles from HTML to css for weekly progress reminder</li><li>Make text translatable for the weekly progress reminder</li><li>Update formatting for weekly progress reminder.</li></ol><h3>1.4.1</h3><ol><li>Add e20rTracker formatting for gravity forms.</li><li>Refactor & format to comply w/Wordpress standards</li><li>Support a printable format for the activity display.</li><li>Fix formatting for links on printed pages.</li><li>Add initial framework for printable activity display</li><li>Add support for a show_reps setting in view_exercise_as_*() functions.</li><li>Add print_only attribute to activity archive shortcode</li><li>Use summary of activity list if user requests a printable list of activities</li><li>Remove unused variables from shortcode_activity()</li><li>Add 'display_type' attribute to e20r_activity shortcode.</li><li>Load print specific CSS file separately</li><li>Fix issue when loading css & javascript for exercise shortcode</li><li>Add print_only attribute to activity archive shortcode</li><li>Allow summary of activity list if user request printable list of activities</li><li>Remove unused variables from shortcode_activity()</li><li>Add 'display_type' attribute to e20r_activity shortcode.</li><li>Split print specific CSS to its own CSS file</li><li>Add print specific CSS for exercises and activities.</li><li>Add support for a printable list of activity descriptions as part of the e20r_activity_archive shortcode</li><li>Fix error message when there are no activities found for the specified period</li><li>Differentiate between upcoming weeks and current/previous weeks in archive display.</li><li>Include minified file in repo.</li><li>Update to reflect page dimensions for print view.</li><li>Refactor file to use Wordpress formatting</li><li>Refactor video content view</li><li>Split old-style (row based) and new-style (column based) exercise views.</li><li>Add support for old style or new-style display of exercise information in print_exercise( $show, $display )</li><li>Add support for specifying display type in e20r_exercise shortcode (i.e. 'display='column|row'')</li><li>Separate CSS for exercise display out from overall activity display.</li></ol><h3>1.4</h3><ol><li>Make sure the 'Assignment Complete' logic works for cases when posts are being repeated on different days in contentFilter()</li><li>e20r_article_summary shortcode would sometimes cause page to go blank</li><li>Return the date of the last post included in the post summary list, not the date of the article generating the list.</li><li>Fix padding/spacing for article summary date values</li><li>Make heading for the article summary list match the formatting for the [daily_progress type='assignment'] formatting.</li></ol><h3>1.3.9</h3><ol><li>Add support in article definition for summary_day and max_summaries settings. summary_day is boolean, max_summaries is numeric.</li><li>New shortcode: [e20r_article_summary days=''] - Generates a summary of articles for the specified # of days. #of days can be configured in the shortcode, or in the article that defines the lesson/reminder/action/activity.</li><li>Only trim the excerpt if the content is being pulled from the post itself.</li><li>Avoid warning message due to incorrect array element address assumption.</li><li>Refactor loadAllHooks()</li><li>Load article summary specific CSS file for article summary pages/posts. (in e20r-article-summary.css)</li><li>Remove shortcode_check() as it’s now inactive.</li><li>Add support for editor in e20_articles CPT definition</li><li>Fix issue where dates on dashboard navigation was “off-by-one”.</li><li>Fix cases where the activity archive would be empty due to timezone confusions.</li><li>Rename debug for prepare_activity() function in e20rWorkout.php</li><li>Reformatted e20rArticleModel.php</li><li>Add display/view for article summary shortcode.</li><li>Refactor the metabox for the article settings.</li><li>Add onClick() event for “Read more” link for lesson/reminder/post/page on daily progress dashboard.</li><li>Pass article ID and other config information to e20r_article_summary shortcode.</li><li>Avoid duplicate event handler actions in onClick() events for daily progress dashboard.</li></ol><h3>1.3.7</h3><ol><li>Load FontAwesome from CDN (used by plugin for wp-admin icons)</li><li>Removed debug output</li><li>Add CSS for pop-up overlay</li><li>Move pop-up for interview completion to e20rArticle classes.</li><li>Add pop-up overlay view (can contain custom message and client related info).</li><li>Load timeout value for back-end client info page.</li><li>Add interview_complete boolean for front-end scripts</li><li>Removed check of whether to skip the Intake form ( It's always loaded as part of the profile page so redirection, etc should be handled there )</li><li>Added content filter check for whether Welcome interview is complete. If not, load NAG screen.</li><li>Wouldn't load user info on back-end due to variable mismatch</li><li>Made timeout variable for jQuery.ajax() calls more generic</li><li>Add Pop-Up management functions (Init, open/close, etc).</li><li>Didn't always return the correct date for getDateForPost()</li><li>Make sure we test for a type specific value when checking the user's ID.</li></ol><h3>1.3.6</h3><ol><li>Add debug output to completeInterview()</li><li>Add caching of interview completion status</li><li>Move loading of client interview data to the model class (out of the controller class)</li><li>Rename loadClientInterviewData to load_interview_data_for_client()</li><li>Return debug output if the client interview form ID isn't available/not configured.</li><li>Updated issues list</li></ol><h3>1.3.5</h3><ol><li>Change version number (1.3.5)</li><li>Refactored for style</li><li>Removed some variable dumps in debug output</li></ol><h3>1.3.4</h3><ol><li>Updated minified CSS files for font-awesome fix.</li><li>Ensure program ID is loaded for the requested user when loading client data.</li><li>Remove (likely) unneeded access check for post->ID and user ID.</li><li>Filter for hasAccess value (PMPro related) broke Gravity Forms load.</li><li>Add fontawesome CSS fix</li></ol><h3>1.3.3</h3><ol><li>Didn't always handle next/previous week for activity archive</li><li>Sometimes cause warning while checking for e20r_client_overview shortcode</li><li>Use new static function sequences_for_post() to obtain list of PMPro Sequences associated with the post id</li><li>Use new static function post_details() to obtain sequence configuration for post_id from PMPro Sequences</li><li>Use new all_sequences() static PMPro Sequences function to obtain list of available sequences</li><li>Remove superfluous load of Font-Awesome css file</li></ol><h3>1.3.2</h3><ol><li>Configure default/global timeout setting for AJAX operations (currently 12 seconds)</li><li>Load jqPlot whenever it's needed</li><li>Clean up naming for javascript files</li><li>Include complete setting</li><li>Fix debug message</li><li>Add fontawesome icons to admin pages.</li></ol><h3>1.3.1</h3><ol><li>Load client-detail page the same way from both e20r_client_overview short-code and directly from the /wp-admin menu.</li></ol><h3>1.3</h3><ol><li>Use timestamp (not formatted date) for message history</li><li>Fix get_clients() to it uses the coach specific program/client list usermeta setting (e20r-tracker-client-program-list), now eturns an array of programs w/lists of clients coached by that coach for the program(s)</li><li>Enh: Add get_program_name( $id ) to return the name of the program specified as an ID</li><li>Enh: get_program_start( $program_id, $user_id) to configure & return the startdate for a specific users program.</li><li>Enh: get_coaches_for_program() - Grab all program coaches and their display names.</li><li>Enh: setProgram( $program_id ) to load a program's settings</li><li>Enh: Load the client detail /wp-admin/ page from the e20r_client_overview shortcode.</li><li>Enh: Add short code for list based client overview (a coach specific page summarizing status of client & linking to client details)</li><li>Make contentFilter() a little more readable & optimized.</li><li>View timestamp version of send time for client message as date/time.</li><li>Add view for e20r_client_overview short code</li><li>Fix viewLevelSelect() so it supports the selection of a specified level ID</li><li>Fix viewMemberSelect() so it supports the selection of the $currentClient->user_id on load</li><li>Didn't always load the users for the specified level to the back-end client detail page.</li><li>Add support for pre-selected user ID/membership level in viewClientAdminPage()</li><li>Load client data by passing $_GET variables to the 'e20r-client-data' admin page ('e20r-client-id' and 'e20r-level-id')</li><li>Complete support for e20r_client_overview shortcode for system coaches.</li><li>Add support for the e20r_client_overview shortcode</li><li>Refactor CSS load for the weeky_progress shortcode</li><li>Only load the jqplot scripts if they're needed.</li><li>Add support for a global 'getLevelIdForUser()' function (returns the program ID the user is a member of).</li><li>Add formatting for new client overview short code (reserved for coaches)</li><li>Make labels in back-end for user profile more descriptive Didn't consider that the data about the users coach is passed as an array ( ID => name )</li><li>Assign and save a program coach to a user when in the back-end user profile view if the user doesn't already have a coach but is a member of a program.</li><li>Save the client assignment details for the coach ID</li><li>Whitespace clean-up</li><li>Fix typo in meta-key finding a coach based on a list of programs</li><li>Assign a coach to the user whenever the welcome interview is being saved.</li><li>Add function to handle coach assignment based on the pool of coaches (and how 'loaded' they are) for the gender (if appropriate) of the client.</li><li>Allow reuse of the 'user isn't a coach' error message for /wp-admin/</li><li>Assign programs for the user to be a coach for in user profile view (/wp-admin/)</li><li>Rename view_userProfile to better document its purpose. Enh: Allow admin to configure the programs this user is a coach for</li><li>Add coach_id to the client settings/profile Fix load_client_settings() so it uses the $clientId variable it's been passed (can't count on $currentClient to be populated already) Add get_coach() function to load coach information for specified client id in program_id</li><li>Fix activity archive time calculations to make sense regardless of day of the week they're being requested.</li><li>Return no activities if the request is for the next week of activities and the current day of the week isn't Saturday or Sunday.</li><li>Only process the unsorted/sorted articles if the count of activities is != 0.</li><li>Fix warning/reminder about future activities & include probable visibility date(s)</li><li>Enh: Allow bucketing of coaches for male and female clients in the program as part of the program definition.</li><li>Whitespace fixes</li><li>Rename wp-admin profile views</li><li>Assign & save the coach for the user (in wp-admin/users.php view).</li><li>Rename views used on the user profile page(s).</li><li>Add coach information to the profile page for the user(s).</li><li>Fix colspans</li><li>Support multiple male & female coaches per program</li><li>Handle arrays of coaches (male & female) on load/save.</li><li>Add support for listing male/female coaches to the program definition (used when assigning coaches when the client completes their welcome interview).</li><li>Change 'lesson' to whatever the $currentArticle->prefix value is set to (Lesson/Reminder/whatever)</li><li>Convert ID to class for e20r-assignment-complete div to allow two instances of the banner (top & bottom of page/post).</li><li>Insert hidden or visible 'assignment complete' banner at top of article/post depending on $currentArticle->complete setting (i.e. whether the assignment is completed or not).</li><li>Clean up the text for the incomplete interview information note.</li><li>Update incomplete interview text for sub-header & make it translatable.</li></ol><h3>1.2.11</h3><ol><li>Fix hasAccess() so it respects the access permissions from the drip-feed plugin.</li><li>Transition back to minified scripts</li></ol><h3>1.2.10</h3><ol><li>Fix lookup of e20r_progress constant (for when in wp-admin).</li><li>Only load status tabs if on a page where the tabs elements exist (i.e. not a daily_progress assignments page).</li><li>Fix daily_progress javascript to allow navigating to next/previous days in dashboard.</li><li>Don't process content filter for article if running on page with e20r_profile short code</li><li>Clean up comments</li><li>Fix article look-up when article ID or delay is defined in $_POST variable.</li><li>Don't process content filter for article if running on page with e20r_profile short code</li><li>Update formatting for edit buttons in check-in</li><li>Make 'Incomplete Interview' text more visible (bolder)</li><li>Load minified e20r-progress-measurements.js script</li><li>Fix text color for primary-button in back-end (Send Message)</li></ol><h3>1.2.8</h3><ol><li>Load codetabs for back-end as well.</li><li>Show progress info correctly on both front & back-end</li><li>Fix tab formatting for back-end client info page</li></ol><h3>1.2.7</h3><ol><li>Clear progress overview info from profile tabs where it's not supposed to appear.</li><li>Include minified .js file for progress-measurements info</li><li>Fix path to image(s) in post_type_icon()</li></ol><h3>1.2.6</h3><ol><li>Fix group tempo setting in backend</li></ol><h3>1.2.5</h3><ol><li>Add e20r_exercises to list of CPTs that can be duplicated.</li></ol><h3>1.2.4</h3><ol><li>Fix button coloring for presale button(s)</li></ol><h3>1.2.3</h3><ol><li>Only load scripts that are needed for the e20r_profile shortcode.</li><li>Always load minified CSS & Javascript.</li><li>Add minified CSS to repository</li></ol><h3>1.2.2</h3><ol><li>Include refactored images</li></ol><h3>1.2.1</h3><ol><li>Fix syntax error in e20r-progress-measurements.js</li></ol><h3>1.2</h3><ol><li>Remove commented out tabs functionality.</li><li>Fix display when nesting profile and status tabs.</li><li>Fix codetabs() padding for smaller screens when using flatbox layout.</li><li>Make survey forms responsive</li><li>Comment out codetabs() from #inner-tabs</li><li>Remove all traces of zozoTabs() (defunct)</li><li>Make sure we only load the e20rCheckinEvent() class once.</li><li>Add codetabs() javascript tabs</li><li>Add CSS for codetabs() javascript tabs</li><li>Refactor e20r_profile page display to simplify (minimize) load of unnecessary data.</li><li>Refactor loading for css, prerequisite & script (javascript) for short_codes.</li><li>Load both codetabs() and jquery.ui.tabs() scripts for profile & progress_overview shortcodes.</li><li>Use codetabs() for progresss_overview (i.e. #status-tabs) tabs Use jquery.ui.tabs() for the Weight & Girth graph (#inner-tabs) tabs</li><li>Refactor code for #inner-tabs</li><li>Use relative positioning of quote character in <blockquote></li><li>Force red warning box around e20r-paragraphs.</li><li>Configure profile-tabs and status-tabs on init. Use codetabs() to manage profile & status tabs.</li><li>Use e20r_progress variable/object on load (if available)</li><li>Fix warnings in loadClientInterviewData()</li><li>Check whether interview is complete & select corresponding description for the Interview tab in e20r_profile shortcode.</li><li>Limit tabs on e20r_profile shortcode to the dashboard, the progress overview and the interview info.</li><li>Refactor /images/ to /img/ Add debug info for progress_overview shortcode</li><li>Incorrectly defaulted to a specific user ID when loading user activities.</li><li>Fix possible corruption when loading the type of a workout group.</li><li>Load activity info/settings independently of short code (so it can be used in other short_codes as well)</li><li>Change how front-end scripts & css is loaded for the variou short_codes.</li><li>Return if the user hasn't defined an activity (prevent 'dummy' activities from being displayed)</li><li>Add label for interview completion (warning/informational) when listing the interview info</li><li>Fix issue where plural was incorrect for estimated times to read between whole minutes.</li><li>Fix warning for articleId Fix warning for show_tracking Fix warning/corruption for group_tempo setting(s)</li><li>Refactor /images/ to /img/</li><li>Load content for e20r_profile tabs as well as tab heading & descriptive text.</li><li>Don't use the modal div in the profile-tabs (it's included in the dashboard already)</li><li>Remove unused code</li><li>Add debug output to help identify issues with workout intensity type/speed</li><li>Fix the url constant (make it consistently 'ajaxurl')</li><li>Fix button styles</li><li>Make sure the layering (z-index) is correct for button vs floating theme menu</li><li>Add formatting for the zozoui tabs and the standard jquery UI Tabs</li><li>Refactor to concentrate javascript & CSS load functions</li><li>Make the 'release day' column sortable in the edit.php screen for the e20r_assignments post type.</li><li>Move the column management functions to the e20r_assignments class file.</li><li>Add support for using zozoui tabs</li><li>Support loading the welcome interview survey if the user is on the e20r_profile page/short code.</li><li>Refactored path to images for plugin.</li><li>Renamed images directory to img/</li><li>Check that the post status for the activity is one of the defined statuses we require.</li><li>Add warning icon</li><li>Add warning/message dialog for interview page(s)</li><li>Fix formatting for tabs</li><li>Formatting updates to lesson display in e20r_profile shortcode.</li><li>Reformat date info (excludes year) for when post was released (for the current user ID)</li><li>Remove author link</li><li>Refactor e20r_profile processing to avoid unneeded activity during preview lessons/reminders</li><li>Add article ID as hidden field for workout(s)</li><li>Add validity check for an array of database fields to enter into the checkin table.</li><li>Add function to save array of data to check-in table.</li><li>Fix translation for Dashboard error/warning messages</li><li>When user clicks 'Activity complete' button, save the activity check-in too.</li><li>Add support for saving an activity status from the front-end to the check-in table in the database.</li><li>Support saving a check-in whenever the user clicks the 'Activity complete' button on the front end</li><li>Include the article id in the workout definition</li><li>Add ability to return a short_name for a specified check-in ID</li><li>Support saving (replacing) a check-in of a specific type.</li><li>Function to fetch the short_name for the specified article and check-in type.</li><li>Remove unused functionality</li><li>Add support for e20r_profile shortcode</li><li>Add e20r_profile shortcode hook</li><li>Include progress javascript files when using the e20r_profile shortcode</li><li>Differentiate between when the e20r_profile shortcode loads the progress info and when the progress_overview shortcode does so.</li><li>View for tabs when using the e20r_profile shortcode</li><li>Simplify isNourishClient() test (nobody is a nourish client from a data collection perspective)</li><li>Load client specific data if the currentClient info isn't already loaded in loadClientInterviewData()</li><li>Define a common dailyProgress configuration function</li><li>Simplify shortcode processing for dailyProgress by using shared configuration function.</li><li>Various formatting for e20r_profile shortcode</li><li>Let admin select page to display for 'contact the coach' information/forms/feedback</li><li>Let admin select page to display to manage membership account data</li><li>Let user defined whether to show the modal 'loading' feedback or not as part of the tabbed progress overview view</li><li>Add formatting for whenever we display the incompleteIntakeForm() content/page.</li><li>Add show_progress() function to load tabbed progress overview view from external class/service.</li><li>Add support for defining a 'Contact the coach' page/post</li><li>Add support for defining a 'Your Account Information' page/post (contains membership plugin profile info & billing info, for instance)</li><li>Add support for loading a lesson/reminder/post for an article (to a 3rd party entity)</li><li>Add support for indicating an article that's part of the 'preparation sequence' for a program</li></ol><h3>1.1.21</h3><ol><li>Fixed a 'No Interview' redirect loop</li></ol><h3>1.1.20</h3><ol><li>Whitespace changes to force minification</li><li>Save updated/changed weight/length unit setting</li><li>If the welcome interview is incomplete, redirect the user to a page describing the problem.</li><li>Configure user settings before changing & updating weight/length unit info.</li><li>If the welcome interview is incomplete, redirect the user to a page describing the problem.</li><li>Fix layout for weight/length unit change</li><li>Support cancel option for weight/length unit change</li><li>Fix typo in weight units setting</li><li>Return true if there is no data to convert in updateMeasurementsForType()</li><li>Add default conversion factors between same unit types</li><li>Add 'incomplete interview description' page setting</li><li>Add debug info for interview_complete() function</li><li>Fix warning message during load of weekly progress related data to front-end.</li><li>Load bare minimum of the client data for front-end JavaScript.</li><li>Add ability to only load the basic client data rather than the full survey.</li><li>getDateForPost() assumed calculations start on day 1 (they start on day 0)</li><li>Support returning HTML for incomplete measurements page if interview isn't completed yet.</li><li>Make text translatable.</li><li>Force setting of program startdate on init (allows startdate to be set by users startdate if needed)</li><li>Removed init of article object when loading program (Should be handled in Article class).</li><li>Added support for how to handle incomplete intake form(s).</li><li>Adds descriptive page for whenever the user hasn't completed the intake form(s)</li><li>Add support for simplified minimum DB load on init of e20rClient class.</li><li>Incorrect date calculated when looking for activities based on delay values.</li><li>Remove empty & unused function</li><li>Fix variable init</li></ol><h3>1.1.19</h3><ol><li>Make sure $currentProgram gets initiated.</li><li>Remove defunct statistics tab.</li><li>Added debug output to show end of achievement list.</li><li>Didn't terminate div & caused issues w/showing achievements (4th tab)</li><li>Fix non-object warning when displaying username</li><li>Fixes following JSHint run</li></ol><h3>1.1.18</h3><ol><li>Fix the unprivileged ajax call error info</li></ol><h3>1.1.17</h3><ol><li>Redirect to log-in URL if ajax call returns error code 3 (Not logged in)</li><li>Add login_url constant for client checkin page</li><li>Return error message to front end when user isn't logged in.</li><li>Fix copyright notice in license</li><li>Correct Text Domain</li></ol><h3>1.1.16</h3><ol><li>Fix formatting for datetimepicker() info in Client Message schedule fields</li><li>Configure allowed times for the Client message scheduling datetimepicker() fields</li><li>Add a group tempo setting of 'Varying'</li></ol><h3>1.1.15</h3><ol><li>get_user_by() calls to lower case 'id'</li><li>Don't use deprecated 'id' when getting the id from the WP_User object</li><li>Fix deprecated 'id' use for $current_user</li><li>Use user_id when indicating the $currentClient's ID</li></ol><h3>1.1.14</h3><ol><li>Use received variable values when updating message history table, not globals</li><li>Save program ID in $email_args array for use when updating message history.</li></ol><h3>1.1.13</h3><ol><li>Use $currentUser->id in place of $clientId (which could be empty?)</li><li>Use 'ID' in get_user_by()</li></ol><h3>1.1.12</h3><ol><li>Attempt to fix array passing to send_email_to_client when scheduling message.</li><li>Add help text for 'send on date/time'.</li><li>Change type of input field for datetimepicker() field</li><li>Fix loading datepicker() in back-end</li><li>Add error handling to time conversion for entered schedule</li></ol><h3>1.1.11</h3><ol><li>Add hook for scheduled client messages by coaches</li><li>Add datetimepicker jQuery-ui library</li><li>Add CSS for datetimepicker functionality.</li><li>Add support for scheduled messages to clients by a coach.</li><li>Remove extra debug info</li><li>Add scheduling of email message to coaching clients by the coach(es)</li><li>Support scheduling messages to clients by the coaches.</li><li>Use UTC when calculating auth timeout values (keep it consistent)</li><li>Load change & click events after updating the program list using AJAX.</li><li>Add bind function for member select dialogs</li><li>Now filtering Coaching page's client info by program name & not membership level</li><li>Add support for loading programs in an array (programID => program name)</li><li>Add support for loading users belonging to the specified programID</li><li>Handle special program IDs (-1= All, 0 = None)</li><li>Load users for a program (not membership level) on coaching page.</li><li>Fix label for drop-down when loading members belonging to the same program ID</li><li>Fix typo in headline for Coaching page</li><li>Use Wordpress timezone setting for last_login()</li><li>Use currentUser->user_id rather than clientId</li><li>Set timezone for auth cookie calculations</li></ol><h3>1.1.10</h3><ol><li>Would allow users to see all content in program(s) if their membership startdate wasn't configured.</li><li>Filter to set UNIX epoch timestamp for program start date ('e20r-tracker-program-start-timestamp')</li></ol><h3>1.1.9</h3><ol><li>Add language (i18n) info to plugin header.</li><li>Add license text to e20r-tracker.php file.</li><li>Add debug info for auth_timeout_reset() function Clean up login_timeout() function</li></ol><h3>1.1.8</h3><ol><li>Reload the updated message history after successfully sending a new message.</li><li>Renaming 'Client Info'  to 'Coach's page'</li><li>Left align heading on message history tab</li><li>Add formatting for client message history tab on Coaching page</li><li>Add e20r_client_messages table definition.</li><li>Add client message history support for Coach's page.</li><li>Record message information when sending from Coaching page</li><li>Support fetching message history by AJAX call</li><li>Show table of sent messages for a specific client.</li><li>Record the fact that v10 of the DB adds the e20r_message_history table.</li><li>Rename convert_postmeta_notice() to display_admin_notice().</li><li>Add support for fetching message history from Coach interface</li><li>Fix logic error in how manage_tables() works (to make sure it updates table structures if needed)</li><li>Add e20r_client_messages table & add sender_id column</li><li>Print status from dbDelta() in manage_tables().</li><li>ClientModel - Record and retrieve messages sent from the Coach interface</li><li>Add support for message history in Coach interface</li><li>Typo in function name when configuring the currentProject in listUserAccomplishments().</li><li>Add message history table to DB</li></ol><h3>1.1.7</h3><ol><li>Test whether the clientId variable was received. If not, try to load it from the page.</li><li>Load client specific exercise statistics on /wp-admin/e20r-client-info page.</li></ol><h3>1.1.6</h3><ol><li>Move click event for Statistics button in Activity overview to apply to both front & back end.</li><li>Fix last login warning for client data page in wp-admin/</li></ol><h3>1.1.5</h3><ol><li>Fix warning message (syntax was odd) Only show date when there's a last_login recorded.</li><li>Actually display the last login info on the client detail page</li><li>Fix buffering for admin interface.</li><li<h3>1.1.4</h3><ol><li>Fix the interview completion check.</li><li>Add expiry for whether to allow editing the Program welcome interview survey.</li><li>Check client_info table to see if the interview was completed or not.</li></ol><h3>1.1.3</h3><ol><li>Remove unused styles</li><li>Add background image for gender selector landing page info (proprietary)</li><li>Make headline location for gender selector landing page info relative</li><li>Add Facebook app page styles for gender selection landing page.</li></ol><h3>1.1.2</h3><ol><li>Saving options sometimes caused the DB updater to run</li><li>Incorrect default timeout values when logging in caused really long sessions to be allowed.</li><li>Reset long sessions to correct timeouts for the user.</li><li>Redirect to login page if user isn't logged in and attempts to load a page containing one of our short codes.</li><li>Fix validation of settings on save.</li><li>Remove program specific settings from settings page</li><li>Remove the lesson (drip-feed) render function for settings.</li></ol><h3>1.1.1</h3><ol><li>Update DB version number to 9 (from 7)</li><li>Clean up DB updates, etc.</li></ol><h3>1.1</h3><ol><li>Style the Welcome Interview (e20r-confirmation-background) confirmation information</li><li>Fix style of multi-select in interview forms</li><li>Show color coded warning in the client info tab in wp-admin if user hasn't logged in for a while</li><li>Didn't include ID of existing record so would save a new one when saving to e20r_client_info table.</li><li>Record the  current timestamp for a user upon login</li><li>Only skip actually empty entries when loading the client Interview data.</li><li>Don't process multiselect fields for Yes/No substitution</li><li>Show the actual value if the saved data is set to the number 0.</li><li>Correct how we escape content in an input or textarea.</li><li>Correct how we display escaped content in a textarea.</li><li>Force a page ID (Set to -9999) if no page is found.</li><li>Hook into the wp_login action to save user login timestamp.</li><li>Fix test for encrypted survey data in decryptData()</li><li>Force last login time to be set for all users on activation</li></ol><h3>1.0.1</h3><ol><li>Fix constructor for e20rTracker class</li><li>Set currentProgram->id before attempting to use it in model</li><li>Test whether global variable is set before trying to use it.</li><li>Make client message UI translatable.</li><li>Set 'From' to 'Coach <name>'</li><li>Don't set program when User ID = 0 (not logged in).</li><li>Fix warning message about uninitialized variable.</li></ol><h3>1.0</h3><ol><li>Release v1.0</li><li>Fix issue where activity settings didn't always get loaded correctly.</li><li>Use the post content TinyMCE editor for the activity description.</li><li>Saving the activity description twice in the DB</li><li>Fix formatting when displaying e20r_exercise description</li><li>Fix formatting when displaying e20r_workout description</li></ol><hr/><h3>0.9.26</h3><ol><li>Set/Group listing has ugly wrap in activity progress overview.</li><li>Fixed issue where the workout history would include workouts for the program that ocurred before the program started (shouldn't happen unless we're forcing it, but worth fixing)</li><li>Force resize/redraw of charts/graphs when the tabs for the progress overview page is clicked.</li><li>Fix issue where a hidden plot was attempted redrawn causing errors.</li><li>Set link for quick-nav class to blue and underlined.</li><li>Added styling fixes for responsive e20r-measurement-table</li><li>Made measurements history table responsive and translatable.</li><li>Return 'No answer recorded' for ranking fields if no answer is present.</li><li>Remove debug output</li></ol><h3>0.9.25</h3><ol><li>Fix erroneous static startdate in getExerciseHistory()</li></ol><h3>0.9.24</h3><ol><li>Fix PHP4 constructor to avoid deprecated warning in Wordpress 4.3.</li><li>Add fields array to model object.</li><li>Allow 3rd party callers to map fields in DB against default names.</li><li>Add getExerciseHistory() for user/program/exercise ID combination - Returns jqPlot friendly data structure.</li><li>Make sure the currentProgram data is available when loading weight/girth graphs.</li><li>Add AJAX handler to support loading exercise specific graphing data for weight/reps.</li><li>Integrate Weight/Rep graphs in the viewExerciseProgress() rendering.</li><li>Add graphing (loadable via button) to the view/page.</li><li>Fix even/odd coloring problem for rows of data.</li><li>Clean up UNIT object names.</li><li>Fix path toe ElegantIcons font(s).</li><li>Add styling for the exercise specific weight/rep statistics.</li><li>Add support for graphs of weight/rep statistics per exercise in the Activity tab.</li><li>Add load button 'click' event handling for weight/rep statistics.</li><li>Force resize of  weight/rep chart(s) 1 second after the page has loaded.</li><li>Redraw all visible graphs if window is resized.</li><li>AJAX function to load activity statistics for a specific exercise/user combination.</li><li>Redraw and resize the graphs whenever the user clicks one of the Weight/Girth tabs.</li><li>Go to PHP5 based constructors (avoid deprecated warning from Wordpress 4.3)</li></ol><h3>0.9.23</h3><ol><li>Fix color problem for input field (button)</li><li>Add assignments to list of post types to allow duplication of.</li><li>Make Achievements tab in progress_overview short code responsive.</li></ol><h3>0.9.22</h3><ol><li>Redirect users if their startdate for the program is after today and they're attempting to access a program related page.</li><li>Add support for defining a preparatory welcome page.</li><li>Fix text when no activities have been found for the user/client. (It's not that it isn't implemented, it's that nothing has been recorded).</li><li>Fix handling of incoming message</li><li>Strip unneeded heading for Subject (duplication)R</li></ol><h3>0.9.21</h3><ol><li>Fix redirect loop in has_* shortcode checks.</li></ol><h3>0.9.20</h3><ol><li>Fix header formatting when creating readme_changelog.txt</li><li>Move runtime check to its own e20r_should_we_run() function since it's repeated for every update function.</li><li>Rename all of the update functions and exists checks to use e20r_ prefix.</li><li>Fix OB1 error when selecting upgrade scripts to run for DB</li><li>Rename upgrade scripts to include e20r prefi<h3>0.9.19</h3><ol><li>Support passing the $version variable to the update_db_to_*() function</li><li>Add support for version argument in when calling the update_db_to_$version() function.</li><li>Can't attempt to use result data as array entries when they're stdClass().</li><li>Split update_db_to for OB1 errors into 2 separate functions w/2 separate DB version numbers.</li><li>Update DB Version to upgrade OB1 errors in dates for check-ins & activities</li></ol><h3>0.9.18</h3><ol><li>Set new DB version</li><li>Transition to using findArticles() whenever searching for articles</li><li>findArticles() will always return an array of articles or FALSE.</li><li>Set the tempo type (string) for fetched activity groups in archives</li><li>Add ability to turn on/off tracking fields in e20r_activity shortcode.</li><li>Handle new allowedActivityAccess() return values.</li><li>Add filter to determine which CPTs to allow duplication of</li><li>Add 'Duplicate' option for specific CPT types</li><li>Duplicate a post (CPT) and all of its e20rTracker specific metadata, etc.</li><li>Avoid loading program ID for users that aren't logged in.</li><li>Transition to using findArticles() whenever looking up an article</li><li>Handle cases where the Workout speed (type) ID is null.</li><li>Set program ID whenever an AJAX call is triggered.</li><li>Transition to using findArticles() whenever looking up an article.</li><li>Only select articles that are in the correct program and has the correct delay (day of release since start)</li><li>Set default (empty) article & ID if no article is found.</li><li>Set program ID when processing AJAX calls</li><li>If no article is found, define a default (empty) one and set the id for it to CONST_NULL_ARTICLE</li><li>Make sure the activity is checked against the user ID (if the User ID is defined)</li><li>Include check & update of the e20r_checkin table as well</li><li>Add load_client_settings() function to only load client_information required to manage progress forms, etc.</li><li>Only load the required client_info data on init()</li><li>Force refresh of data in setClient() if new user gets loaded.</li><li>Use simplified $e20rArticle->findArticles() function to locate articles</li><li>Load default settings if user/admin/program specifies the CONST_DEFAULT_ARTICLE id (-9999)</li><li>Only ignore an article with a release date of -9999 if the user isn't adamant we don't.</li><li>Add parent::find() for e20rSettings class.</li><li>Load the $currentProgram configuration when e20rProgram::init() is called</li><li>Transition loadProgram() to use configure_startdate() function.</li><li>Create dedicated 'configure_startdate' function - it currently supports using the defined program startdate, or to use the membership start date for the user.</li><li>Modify program config in startdate() if a different programId from what we have in $currentProgram is specified in the function arguments.</li><li>Refactor e20rArticle class Use article ID when init()</li><li>Load $currentArticle in init()</li><li>emptyArticle() didn't return the default settings when called.</li><li>Reduce the number of article search & return functions available (only really need findArticles(), but may want findArticlesNear() later)</li><li>Clean up getActivity() function and return the activity ID when calling it. (or false if error)</li><li>getExcerpt() now handles multiple activities defined for an article (and returns the most likely candidate for the logged in user).</li><li>Do nothing in the has_*_shortcode() functions if the user isn't logged in.</li><li>Init $currentProgram global in has_*_shortcode() functions</li><li>Simplify the article search functions (use 'findArticles() consistently)</li><li>Use I18N compatible date function in getDateForPost()</li><li>Fix display function for Workout Archive didn't always run</li><li>Fix date for when the check-in was made (i.e. when it's scheduled to be done based on the delay value)</li><li>Add code to fix for_date field in e20r_workout table.</li><li>Only init the plugin if the user is already logged in</li><li>Make show/hide logic more obvious.</li><li>Remove unused if/then clauses for debug logging.</li><li>Add activity_id for the e20r_articles CPT to the list of variables to de-serialize.</li><li>Simplified the allowedActivityAccess function and have it return better granularity access information</li><li>Allow selection of multiple activities for an article definition</li><li>Remove unneeded code (Doesn't do anything useful) Add activity_id as a field to save/load as an array (from postmeta)</li><li>Builds the Change Log entries automatically</li><li>Don't create a new default assignment if one with the same title already exists</li><li>Fix paths & clean up temporary files</li><li>fonts/ is now included in the css/ directory so no need to specify it separately</li></ol><h3>0.9.16</h3><ol><li>Make sure we have a valid 'To' address in 'Client Contact' form for email messages.</li></ol><h3>0.9.15</h3><ol><li>Add e20r_coach role to system on load if needed.</li><li>Add actions for updating the user profile with the 'coach' role (if applicable)</li><li>Implemented is_a_coach() - returns true if the user has the e20r_coach capability.</li><li>Small typo in debug info from load_from_survey_table()</li><li>Add support for setting a user as a program coach in the user profile screen for the E20R-Tracker plugin</li><li>Add fonts directory to installation kit</li><li>Move ElegantIcons fonts to a sub-dir of css/</li><li>Add iThemes' ElegantIcons font files</li><li>Stop debug listing for activity datastructure.</li><li>Stop debug listing for achievement datastructure.</li><li>Stop output of arguments debug for query.</li><li>Check for empty() rather than false after $wpdb->get_results() call,</li><li>Avoid double-checking whether the article ID is present or not before adding it to the list of articles to return.</li><li>Remove echo of actual user key (used during debug of functionality).</li><li>Support using DB column value as indicator for type of decryption to do.</li><li>Remove superfluous check of encryption indicator.</li><li>Move un-implemented is_a_coach() function to e20rTracker class.</li><li>Don't display the encryption key for the user in the client information data.</li><li>Use I18N capable date function when calculating date/time for updates/edits.</li><li>Always use program Id & article when loading data.</li><li>Avoid superfluous config loads for programs and articles in load_from_survey_table()</li><li>Force the survey type if we're running from the back-end.</li><li>Select decryption type based on whether or not the DB records indicates its encryption status</li><li>Wouldn't always load the client data for the specified user/client ID</li><li>Only allow coaches to access a users data ( test whether is_a_coach() returns true/false )</li><li>Load program and article config when a coach is attempting to view the data for a user in the back-end.</li><li>Would occasionally return the incorrect date for a post/article.</li><li>Would occasionally load check-in data for the wrong user ID</li><li>Wouldn't always identify the correct article by ID on init.</li><li>Add survey check (returns true/false) based on article ID (isSurvey())</li><li>Only allow coaches to access a users data ( test whether is_a_coach() returns true/false )</li><li>Would occasionally return the incorrect date for a post/article.</li><li>Would occasionally load check-in data for the wrong user ID</li><li>Always set program ID & Article ID when a coach is attempting to view E20R-Tracker data in /wp-admin/</li><li>Would sometimes treat a regular user as a coach</li><li>Update DB version number</li></ol><h3>0.9.14</h3><ol><li>Load css for admin to render client information page(s) correctly sortByFields() needs to return the sorted data.</li><li>Get the correct startdate for the specified user id</li><li>Fix client message display and add alert if the client hasn't completed their interview.</li><li>Sort the assignment replies by delay (date) and order</li><li>Whitespace for readability</li><li>Return false if key is empty.</li><li>Use namespace for Crypto library and its exception handler</li><li>Handle cases where no UserId was supplied and the user is logged in.</li><li>Encode metadata when saving and loading the key.</li><li>Default to Base64 if we're having problems with the key</li><li>Upgraded Crypto library and renamed Crypto sources</li><li>Renamed Crypto library & its autoloader</li><li>Wouldn't handle all cases of a non-existing record.</li><li>Fix encryption (AES) and masking (base64).</li><li>Support any GravityForm based survey with the correct CSS class defined for processing.</li><li>Find the survey form we're processing and try to match it to an article that has a survey configured.</li><li>Ensure hover color of the text remains white.</li><li>Remove superflous loads of the survey & client_info data.</li><li>Typo in Encrypt Surveys option</li><li>Renamed getData() to get_data()</li><li>Added is_encrypted column to the e20r_surveys.</li><li>Add 'is_encrypted' field for a row in the surveys table.</li><li>Don't try to save dynamic client_info fields (incomplete_interview and loadedDefaults)</li><li>Check variables before using them.</li><li>Set survey type based on post ID</li><li>Correctly merge data from the e20r_surveys and e20r_client_info tables on load.</li><li>Handle multi-choice options when saving Gravity Form surveys.</li><li>Handle multi-choice fields when loading previously saved Gravity Form surveys</li><li>Disable encryption of individual DB fields.</li><li>Remove a survey entry after it's been encrypted and saved by the app.</li><li>Handle \n in text boxes.</li><li>Force color for buttons</li><li>Add definitions for a SURVEY_TYPE constant.</li><li>Didn't load the article settings for the specified articleId if it wasn't already loaded</li><li>Add e20r_surveys table definition</li><li>Add article_id field to e20r_client_info table</li><li>Rename getData() function to get_data() Return false in place of 0 for boolean flags</li><li>Remove wrong/weird set/group calculation</li><li>Superfluous warning thrown if article was empty.</li><li>Add support for survey_type field.</li><li>Remove wrong/weird set/group calculation</li><li>Typos and counter errors</li><li>Clean up group/set display for activity history.</li><li>Display multichoice arrays correctly in assignment view</li><li>Add support for e20r_surveys table</li><li>Don't show Measurements alert if measurements page isn't defined in the program</li><li>Make placeholder text translatable (and update to match button text)</li></ol><h3>0.9.13</h3><ol></ol><h3>0.9.12</h3><ol><li>Load select2 code for assignments in daily_progress shortcode.</li><li>Correctly identify the DB upgrade routine(s) to run.</li><li>Set DB version number</li><li>We haven't got handlers for a simple checkbox assignment yet, so remove it as an option Decode array of answers when field_type = multichoice.</li><li>Handle multichoice and hidden input field for the multichoice answer(s).</li><li>Include pre-existing answer in text input for assignment.</li><li>Add formatting for inputs in Yes/No fields.</li><li>Fix SQL for update function</li><li>Rename '*assignment-survey*' identifiers/classes to '*assignment-ranking*' Init select2 if multichoice field is present on page/in post.</li><li>Same formatting for multichoice and other inputs on assignments form</li><li>Add support for multichoice field(s) on the assignment form</li><li>Make 'save' button available if multichoice field is clicked (and save is hidden).</li><li>Convert multichoice answers to json and save in hidden assignment-answer input (to keep saving simple).</li><li>Handle survey configuration(s) in dailyProgress shortcode.</li><li>Add check-box for article that hosts/manages a survey</li><li>Set DB Version number</li><li>Fix CSS for new multichoice field option in Assignments</li><li>Add support for managing multi-option select fields for assignments</li><li>DB table upgrade script for DB v2.</li><li>Add support for upgrading DB based on external e20r_db_upgrade.php file & functions</li><li>Add manage_option_list callback for multichoice field support. (May not be needed)</li><li>Handle cases where there are select_options defined but the admin changed the field type.</li><li>Rename answer inputs (requires change to DB enum()) Rename survey rating to ranking</li><li>Rename sortAssignments() to sortByField().</li><li>Transition to sortByFields() in Assignments class.</li><li>Move sortByFields() to e20rTracker class</li><li>Make sortByFields() support user defined fields to sort by.</li><li>Add select_options setting/postmeta field.</li><li>Add support for multichoice field in assignment configuration.</li><li>Add support for displaying a multichoice field in an assignment.</li><li>Rename 'survey' fields to 'ranking' fields (the 1 - 10 ranking/likert fields)</li><li>Show an actual input field for text input fields.</li><li>Fix JS warnings</li><li>Enh: Add support for managing multi-option select fields for assignments</li><li>First update DB function created/loaded.</li><li>Reflect actual purpose of input: 'survey' versus 'ranking'</li><li>Use E20R_DB_VERSION constant to indicate change in DB version.</li><li>Use renamed activation/deactivation functions</li><li>Add e20r_db_version option</li><li>Create e20r_surveys table definition on plugin activation.</li><li>Transition from 'key' to 'index' for table indexes.</li><li>Move DB management to its own manage_tables() function</li><li>Rename plugin activiation and deactivation functions.</li><li>Handle situations where the user has assigned the same post/page to two different articles.</li><li>Test for access against a valid $article object.</li></ol><h3>0.9.11</h3><ol><li>Unnecessary version bump due to mistake during commit.</li></ol><h3>0.9.10</h3><ol><li>Add timeout error handling to jQuery.ajax() or .post() operations</li><li>Update shortcode section in Readme</li><li>Remove or comment out shortcode arguments that aren't used</li><li>Use $currentProgram global in getDelay.</li><li>Make sure startdate gets converted to a timestamp value before use.</li><li>We don't use 0 as the first day of the program, so correct the daysBetween() calculation.</li><li>Be consistent in loading settings for a program. Set program startdate for the current user based on their membership startdate.</li><li>Remove special handling for membership systems in $e20rProgram->startdate) (It's now in the loadProgram() code).</li><li>Remove obsolete code</li><li>Handle startdate correctly (it's set to monday)</li></ol><h3>0.9.9</h3><ol><li>Fix situations where the order number winds up getting 'wonky' (negative)</li><li>Handle situations where an unexpected variable type is attempted saved (should be array but isn't so we'll need to convert it).</li><li>Didn't clear the actual NULL (or 0) setting.</li><li>Didn't save assignment_ids for article when user clicked 'Save' in back-end</li><li>Add data filter for PMPro emails.</li><li>Include message to user (in confirmation email) about the status of their membership (depends on day of sign-up).</li><li>Removed unneeded level look-up.</li><li>When it's requested, make sure we actually load Achievements (not Assignments) data. (Only applied to the back-end client view)</li><li>Set timeout for AJAX operations to 10 seconds (10000)</li></ol><h3>0.9.8</h3><ol><li>Use the delay value for the article that is manages the postId to verify access. If the delay value is <= the the userIds current delay value, grant access.</li><li>Set the program start date to that of the user (i.e. force the startdate to be keyed off of the users membership start date).</li><li>Force use of the membership plugin's start date for the specified user.</li><li>Base access on the delay value for the specified user(s).</li><li>Handle the 'First day of the program, not allowed to proceed backwards' error message (ecode == 2)</li><li>On the first day of the program, it allowed you to attempt to navigate backwards without having any defined articles available. This caused error messages.</li><li>Return a specific error code to the AJAX caller if we're on the first day of the program for this user and they try to go backwards.</li></ol><h3>0.9.7</h3><ol><li>Add styles for legend/description on Achievements tab</li><li>Add legend/description for Achievements tab</li><li>Didn't load assignment & lesson/reminder for the 'to' day in the Dashboard day navigation.</li></ol><h3>0.9.6</h3><ol><li>Handle migration from  articles/assignments/checkins settings/postmeta to using article_ids/assignment_ids/checkin_ids</li><li>Set program id for measurement entry in progress overview 'measurement history' table</li><li>Reset postdata whenever using WP_Query(), get_posts() or get_pages()</li><li>Add private sort function (sortAssignments()): Will sort based on delay and order_num value ( delay, then order_num )</li><li>Nits for setting up arguments in loadAssignmentByMeta()</li><li>Skip entries with field_type = 0 ('Completed' button) unless searching based on field_type.</li><li>Also include article_id from database ({wp_prefix}_e20r_assignments table when loading user data for an assignment.</li><li>Fix issue where the system would always load default settings if an assignment question had been defined.</li><li>Move addPrograms() function to parent class.</li><li>Add addPrograms() function to allow adding of a single program_id to the existing settings->program_ids array.</li><li>Load from the correct select2 CDN (assume HTTPS) Reset postdata after using WP_Query() or get_posts()</li><li>Add URL to weekly_progress form to the javascript settings array.</li><li>Because we moved to using the parent::find() function we have to deal with testing whether the data returned is an array or an object before attempting to use it</li><li>Need a program id setting when configured when we list the assignments for the user</li><li>Use the e20r_progress.settings.weekly_progress constant to locate the URL for the measurement form</li><li>Fix layout/styles on measurement page(s)</li><li>Fix layout/style for photo upload buttons on measurement page.</li><li>Use page_id setting for generating link to the correct measurement form when listing the table of measurements.</li><li>Use correct URL to check-mark graphic for viewLessonComplete()</li><li>Use measurement_page_id setting for loading link to measurement form.</li><li>Use parent class find() function to load article data.</li><li>Add rudimentary client_info data listing</li><li>Load & view available client information in /wp-admin/ back end</li><li>Add support for handling redirection for logged in user when attempting to access multiple sales pages in contentFilter()</li><li>Add support for handling multiple sales pages in contentFilter()</li><li>Rename save button from 'Complete' to 'Save Answers'</li><li>Make sure the dashboard page ID has been defined.</li><li>Add redirect to dashboard if a logged in user (who's a member of the program) is attempting to access the sales page/post.</li><li>URL to client info page was incomplete</li></ol><h3>0.9.5</h3><ol><li>Handle situations where user has defined a workout with start/end day number or dates.</li><li>Include support for handling proper WP meta_query for program_id limited searches</li><li>Use $currentArticle rather than loading the same data again.</li><li>viewExerciseProgress() - Test activity list being received against empty() not is_null()</li><li>Fix issue when searching for article definitions belonging to a specific program.</li><li>Simplify findArticle() and leverage the find() function from the parent class while still ignoring 'always available' articles (Possibly not what we want!)</li><li>Simplify and use WP meta_query when searching for program specific check-in definitions</li><li>Remove debug output for loadOption() function - too noisy</li><li>Fix: Achievements statistics in progress overview.</li><li>Fix: Attempted to show excerpt when there was no action or activity defined.</li><li>For consistency use $currentArticle for accessing article settings</li><li>Fix: Achievements statistics in progress overview.</li><li>Automated metadata conversion (from serialized array to independent meta_key values) on plugin activation.</li><li>Added constant to determine whether to convert/unserialize the metadata.</li><li>Converted from serialized program id & article id metadata (programs|program_ids|article_id|other keys) to proper meta data (for those settings) that is WP query searchable.</li><li>Indicate link to assignment page when listing assignments in the progress_overview short code.</li></ol><h3>0.9.4</h3><ol><li>Use the article summary - if it exists - for the action excerpt.</li><li>Set background color to white for activity history list</li></ol><h3>0.9.3</h3><ol><li>Simplify processing of workout history for user's progress overview.</li><li>Allow metadata upgrade to proceed</li><li>White-screen of death issue (undeclared variable)</li></ol><h3>0.9.2</h3><ol><li>Fix static/non-static call warnings in e20rTracker</li><li>Removed unused global declaration</li><li>Add support for showing Activity history (i.e. the exercise rep statistics)</li><li>Ensure all assignment data gets loaded when requested.</li><li>Hide annoying alert dialog when there are no measurements to be found for the user.</li><li>Fix text for default setting (no page) in Program definition meta</li><li>Add program list to assignment definition (may hide at some point in future)</li><li>Don't limit number of records returned in loadAllSettings()</li><li>Refactor parameters</li><li>Transition to using currentClient global variable.</li><li>Save program ID(s) for each assignment used by the article.</li><li>Add update_metadata() at init for Assignments</li><li>Load all required scripts and styles to front-end.</li><li>Transition isEmpty() to the global e20rTracker class.</li><li>Use the isEmpty() function to check whether objects/arrays contain data</li><li>Only load assignment if it's defined as belonging to the program(s) (Or there are not programs defined for this assignment)</li><li>Force program_ids settings to be an array (if it's not when loaded).</li><li>Support updating assignment options (name and values) on init.</li><li>Add program list to assignment definition</li><li>Correctly process assignments array during save</li><li>Didn't always recognize if the e20rMeasurements object was empty or not.</li><li>Load Activities tab for progress_overview short code</li><li>Set user id & program info for weekly_progress short code</li><li>Fix formatting for progress_overview short code</li><li>Program-specific setting for weekly_progress page</li><li>Fix typos in changelog</li></ol><h3>0.9.1</h3><ol><li>Removed console logging of various objects</li><li>Add 'working' graphic when saving notes.</li><li>Set default measurement day to be Saturday (day #6)</li><li>Didn't attempt to list all defined mebership levels for Paid Memberships Pro</li><li>Make measurement day setting a program specific setting.</li></ol><h3>0.9</h3><ol><li>Display daily progress notes (decoupled from action check-in data)</li></ol><h3>0.8.19</h3><ol><li>Check-in action would sometimes overwrite check-in data for other days.</li><li>Set activity override if user navigates to next/previous day.</li><li>Bind to the 'Read more' activity link</li><li>Removed dummy class function</li><li>Add redirect with POST when user clicks teh 'Read more' link for a future/past activity.</li><li>Load new settings for the correct article when the user is navigating through daily_progress days</li><li>Remove commented out callback handler(s)</li><li>Remove debug for arguments in find() (log file hog!)</li><li>Handle cases where the activity short code is loaded as part of a redirect with specific activity ID & article information present. Note: Short code attributes take precedence over $_POST entries.</li><li>Only load data for specific activities if authorized to do so</li><li>Load jquery.redirect.js for daily_progress short code</li><li>Add ID to Read more link for activity & action excerpts</li><li>Add event handler for the Activity excerpt 'Read more' link</li><li>Add function to execute on click event for 'Read more' link</li><li>Add support for specifying activity to display when 'Read more' link is selected/clicked.</li></ol><h3>0.8.18</h3><ol><li>Handle situations where the delay value is 0 (i.e. the beginning of the program)</li><li>Handle (first day of program - 1 day) correctly: Nothing will be scheduled</li><li>Never prevent users from scrolling back, all the way to the beginning of the program</li></ol><h3>0.8.17</h3><ol><li>Cleaned up hasAccess() function</li><li>Admin access filter was a bit too 'aggressive' in granting access.</li><li>Handle success/failure during processing of next/previous navigation operations</li><li>Handle navigation to a different day than the current one.</li><li>Didn't consistently return an object from findArticleByDelay()</li></ol><h3>0.8.16</h3><ol><li>Updated e20r_assignments table definition</li></ol><h3>0.8.15</h3><ol><li>Lets the admin specify a '# of days since start of membership' for when the activity/workout is scheduled to become available/unavailable for the client.</li><li>Correctly return the found article ID if a single article was located.</li><li>Reformat layout of activity/workout settings in backend.</li><li>Format exercise settings window in backend</li></ol><h3>0.8.14</h3><ol><li>Handle previously given answers for a daily assignment.</li><li>Support updates to survey and yes/no fields</li><li>Didn't always reflect prior answers given. Fix: Didn't handle Yes/No answers correctly</li><li>Allow user to save whenever they update a response/answer.</li></ol><h3>0.8.12</h3><ol><li>Configure the dashboard page and progress page as part of the program definition</li><li>Set background color for the heading settings</li><li>Use $currentProgram global to set the start timestamp and page URL for the dashboard.</li><li>Load style for wp-admin when defining programs</li></ol><h3>0.8.11</h3><ol><li>Buffer output in showYesNoQuestion()</li><li>Clean up CSS for lesson button</li></ol><h3>0.8.10</h3><ol><li>Add support for Yes/No check box responses to assignments</li><li>Add support for survey ranking field responses to assignments</li><li>Use E20R_VERSION constant to version JavaScript and CSS files</li><li>Didn't add new assignments in the correct order in all situations</li><li>Didn't always save article settings</li><li>Didn't always save assignment settings</li><li>Force page reload if the article is newly created and an assignment is being added</li></ol><h3>0.8.8</h3><ol><li>Prevent the daily assignment short code from bleeding into the actual post/page.</li><li>Only list assignments with a delay value == release_day for the article.</li></ol><h3>0.8.7</h3><ol><li>Wouldn't save assignment settings.</li><li>Didn't always set the correct assignment ID</li></ol><h3>0.8.6</h3><ol><li>Set correct timestamp value in short code</li><li>Didn't always load the user's previously saved data when loading workout definition.</li><li>Make sure user is logged in before accepting AJAX save of workout data.</li><li>Simplified userCanEdit()</li></ol><h3>0.8.5</h3><ol><li>Height of the date navigator in the &#91;daily_progress shortcode&#93; output</li><li>Layout of program definition settings in wp-admin</li><li>Set default $users setting for program on load</li><li>Fix: Make definition of page containing &#91;e20r_activity&#93; short code more robust for a program</li><li>Didn't always load an appropriate length excerpt</li><li>Didn't always select the url to the page containing the defined activity</li><li>Didn't always add a 'Click to read' link</li><li>Fix: Didn't load check-ins from article definition in getCheckins()</li><li>Add debug for getActions()</li><li>Fix: Loading of check-ins, actions &amp; activity display.</li><li>Add config setting for a program activity_page_id<li></ol><h3>0.8.4</h3><ol><li>Didn't always add a new default assignment for the article.</li><li>Didn't always load the correct status for the assignment.</li></ol><h3>0.8.3</h3><ol><li>Fix numerous issues when listing &#93;daily_progress type='assignment'&#91; output</li><li>0.8.2 - Fix program data load and add highlight around lesson complete button in daily assignment.</li><li>0.8.1 - Correctly handle next weeks activity archive.</li></ol><h3>0.8.0</h3><ol><li>Add &#91;20r_activity_archive&#93; short code support</li></ol><h3>0.7.1</h3><ol><li>Bumped to test auto-update</li></ol><h3>0.7.0</h3><ol><li>Added automatic update functionality</li></ol>"
  }
}

